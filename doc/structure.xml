<?xml version="1.0" encoding="utf-8"?>
<project title="API Documentation" version="2.8.5">
  <partials/>
  <file path="component/controller.php" generated-path="component.controller.html" hash="7822c23613b37594fdcedc6ab6a7f53f" package="phpunk\component">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="phpunk\component"/>
    </docblock>
    <namespace-alias name="api_error">\PHPunk\api_error</namespace-alias>
    <class final="false" abstract="false" namespace="PHPunk\Component" line="13" package="phpunk\component">
      <extends/>
      <name>controller</name>
      <full_name>\PHPunk\Component\controller</full_name>
      <docblock line="13">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="13" description="phpunk\component"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Component" line="22" package="phpunk\component">
        <name>__construct</name>
        <full_name>\PHPunk\Component\controller::__construct()</full_name>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="22" description="&lt;p&gt;Model instance for this component&lt;/p&gt;" type="object" variable="$model">
            <type>object</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$model</name>
          <default></default>
          <type>object</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Component" line="40" package="phpunk\component">
        <name>do_action</name>
        <full_name>\PHPunk\Component\controller::do_action()</full_name>
        <docblock line="40">
          <description>Executes concrete action methods in child classes</description>
          <long-description></long-description>
          <tag name="param" line="40" description="&lt;p&gt;API name of the relevant action&lt;/p&gt;" type="string" variable="$action">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$action</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Component" line="53" package="phpunk\component">
        <name>pre_view</name>
        <full_name>\PHPunk\Component\controller::pre_view()</full_name>
        <docblock line="53">
          <description>Executes concrete view methods in child classes</description>
          <long-description></long-description>
          <tag name="param" line="53" description="&lt;p&gt;API name of the relevant view&lt;/p&gt;" type="string" variable="$view">
            <type>string</type>
          </tag>
          <tag name="param" line="53" description="&lt;p&gt;Array of named parameters that will be passed into the view&lt;/p&gt;" type="array" variable="$vars">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$view</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="true">
          <name>$vars</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Component" line="64" package="phpunk\component">
        <name>pre_render</name>
        <full_name>\PHPunk\Component\controller::pre_render()</full_name>
        <docblock line="64">
          <description>Executes concrete api view methods in child classes</description>
          <long-description></long-description>
          <tag name="param" line="64" description="&lt;p&gt;API name of the relevant view&lt;/p&gt;" type="string" variable="$view">
            <type>string</type>
          </tag>
          <tag name="param" line="64" description="&lt;p&gt;Database result/record or error that will be rendered&lt;/p&gt;" type="mixed" variable="$result">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$view</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="true">
          <name>$result</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <property final="false" static="false" visibility="public" line="13">
        <name>$resource</name>
        <default/>
        <docblock>
          <description>Resource name for this component</description>
          <long-description/>
          <tag name="var" description="&lt;p&gt;Resource name for this component&lt;/p&gt;" type="string" line="13">
            <type by_reference="false">string</type>
          </tag>
          <tag name="magic" line="13"/>
          <tag name="property" line="13" description="Resource name for this component" type="string" variable="$resource">
            <type>string</type>
          </tag>
        </docblock>
      </property>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="13" code="PPC:ERR-50005">No summary for class \PHPunk\Component\controller</error>
      <error line="22" code="PPC:ERR-50008">No summary for method __construct()</error>
    </parse_markers>
    <source>eJy1Vd1P2zAQf07+ihOqlhSVlYc9wWCgrWI8jFV8aA8MRa5zbT1cO7OdApr433e2k0ILFSBtfUid+/zd/XyXj5+qaZX2NzdT2ISDivFrNkEgWa2uf3I9q7RC5UjZT1PFZmjJBGH4dej1n1v9bprWdiFmlSjQGG1IvIhsdIXG3YF1RqgJdAxaXRuKddoefHgYawNuKiws5+aSWS9Tzmgp0cCfNPGhEx9bTJQ2CEI5NIpJmDMj2Eii1/bThFI75A5L6BQzXaIkWA/OFTNsBnr0i0ygE/TwLTyFso4p/iymJnI9koLDuFbcCa2gKAghFVhzl8dQXQ806Xjvrf2YHfaaNLtpcp8+LWPGJhRzhm6qy7V5JkgZrvEuxrc3wvEpPJIknBEfWdvkbMfLEoOuNgoOlvBs7bdWBIgQLYEa3CKvHYbWc3JHYBFCxGepScCnQpYQGEL7uKkt1Y3L4fA4cqzH1E4EgxLnTLkm5JpaS11Efd7EaVoaAVAzKUthsJJ0L/NsK+tBVtBjYfye3uM58/WJMeTRtcBbYZ3NQzPIIUq73fShUZxJWdDFNoWHkzNj2N2qPZ2Ko8G5/xt+Pzvv+iQoLfowVP9kQt5hGPKNC1XiWCi6iE1HGh7a/u80oDd6MCguzganxY/D05Pjk6Pu7kuszAXevImT4LCWEa997BUqJydmLByGM3l4zxKCAUEgjZsyBzdCShjRCvGpSz+UOsRuQz5DcWWw8Oo8oOrBu5DolTx7l8iyP72B41jN3mtJDpBe5IFW3//mYiZu/SqjS1NLB1+YYyM/6/G9b5BrUwJtrHDpljkxSDfQ4Lq14nmIJg9MxLCrXGR+xWfU9X9JSlxcbWFPiLlctr96bvDuwY/eaiBF7V18k/KAvW5HMQLshfWYnYe+/67R+q+FZyRQQ5tfaQeNB9V3GcyTjL4PrrYZAOztw4ft7V4jX6xdL18Z8tYm5AWIvp1IMv2u/LO72MT36V84gGaU</source>
  </file>
  <file path="compat/http.php" generated-path="compat.http.html" hash="4caac4c8b7ae8834b501b7fee0943326" package="phpunk\compat\http">
    <docblock line="0">
      <description>Backwards-compatibility functions</description>
      <long-description></long-description>
      <tag name="package" line="0" description="phpunk\compat\http"/>
    </docblock>
    <constant namespace="" line="8" package="phpunk\compat\http">
      <name>HTTP_COOKIE_PARSE_RAW</name>
      <full_name>\HTTP_COOKIE_PARSE_RAW</full_name>
      <value>1</value>
      <docblock line="8">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="8" description="phpunk\compat\http"/>
      </docblock>
    </constant>
    <constant namespace="" line="9" package="phpunk\compat\http">
      <name>HTTP_COOKIE_SECURE</name>
      <full_name>\HTTP_COOKIE_SECURE</full_name>
      <value>16</value>
      <docblock line="9">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="9" description="phpunk\compat\http"/>
      </docblock>
    </constant>
    <constant namespace="" line="10" package="phpunk\compat\http">
      <name>HTTP_COOKIE_HTTPONLY</name>
      <full_name>\HTTP_COOKIE_HTTPONLY</full_name>
      <value>32</value>
      <docblock line="10">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="10" description="phpunk\compat\http"/>
      </docblock>
    </constant>
    <constant namespace="" line="12" package="phpunk\compat\http">
      <name>HTTP_PARAMS_ALLOW_COMMA</name>
      <full_name>\HTTP_PARAMS_ALLOW_COMMA</full_name>
      <value>1</value>
      <docblock line="12">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="12" description="phpunk\compat\http"/>
      </docblock>
    </constant>
    <constant namespace="" line="13" package="phpunk\compat\http">
      <name>HTTP_PARAMS_ALLOW_FAILURE</name>
      <full_name>\HTTP_PARAMS_ALLOW_FAILURE</full_name>
      <value>2</value>
      <docblock line="13">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="13" description="phpunk\compat\http"/>
      </docblock>
    </constant>
    <constant namespace="" line="14" package="phpunk\compat\http">
      <name>HTTP_PARAMS_RAISE_ERROR</name>
      <full_name>\HTTP_PARAMS_RAISE_ERROR</full_name>
      <value>4</value>
      <docblock line="14">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="14" description="phpunk\compat\http"/>
      </docblock>
    </constant>
    <constant namespace="" line="16" package="phpunk\compat\http">
      <name>HTTP_PARAMS_DEFAULT</name>
      <full_name>\HTTP_PARAMS_DEFAULT</full_name>
      <value>HTTP_PARAMS_ALLOW_COMMA | HTTP_PARAMS_ALLOW_FAILURE | HTTP_PARAMS_RAISE_ERROR</value>
      <docblock line="16">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="16" description="phpunk\compat\http"/>
      </docblock>
    </constant>
    <function namespace="" line="28" package="phpunk\compat\http">
      <name>http_parse_cookie</name>
      <full_name>\http_parse_cookie()</full_name>
      <docblock line="28">
        <description>Parses an HTTP cookie</description>
        <long-description></long-description>
        <tag name="package" line="28" description="phpunk\compat\http"/>
        <tag name="param" line="28" description="" type="string" variable="$cookie">
          <type>string</type>
        </tag>
        <tag name="param" line="28" description="" type="integer" variable="$flags">
          <type>integer</type>
        </tag>
        <tag name="param" line="28" description="" type="array" variable="$extras">
          <type>array</type>
        </tag>
        <tag name="return" line="28" description="" type="object">
          <type>object</type>
        </tag>
      </docblock>
      <argument line="0" by_reference="false">
        <name>$cookie</name>
        <default></default>
        <type>string</type>
      </argument>
      <argument line="0" by_reference="false">
        <name>$flags</name>
        <default>HTTP_COOKIE_PARSE_RAW</default>
        <type>integer</type>
      </argument>
      <argument line="0" by_reference="false">
        <name>$extras</name>
        <default>array()</default>
        <type>array</type>
      </argument>
    </function>
    <function namespace="" line="74" package="phpunk\compat\http">
      <name>http_parse_params</name>
      <full_name>\http_parse_params()</full_name>
      <docblock line="74">
        <description>Parses a parameterized HTTP header</description>
        <long-description></long-description>
        <tag name="package" line="74" description="phpunk\compat\http"/>
        <tag name="param" line="74" description="&lt;p&gt;param&lt;/p&gt;" type="string" variable="$param">
          <type>string</type>
        </tag>
        <tag name="param" line="74" description="" type="integer" variable="$flags">
          <type>integer</type>
        </tag>
        <tag name="return" line="74" description="" type="object">
          <type>object</type>
        </tag>
      </docblock>
      <argument line="0" by_reference="false">
        <name>$param</name>
        <default></default>
        <type/>
      </argument>
      <argument line="0" by_reference="false">
        <name>$flags</name>
        <default>HTTP_PARAMS_DEFAULT</default>
        <type>integer</type>
      </argument>
    </function>
    <function namespace="" line="115" package="phpunk\compat\http">
      <name>http_parse_headers</name>
      <full_name>\http_parse_headers()</full_name>
      <docblock line="115">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="115" description="phpunk\compat\http"/>
        <tag name="param" line="115" description="&lt;p&gt;Raw HTTP header&lt;/p&gt;" type="string" variable="$header">
          <type>string</type>
        </tag>
        <tag name="return" line="115" description="Sssociative array of HTTP headers" type="array">
          <type>array</type>
        </tag>
      </docblock>
      <argument line="0" by_reference="false">
        <name>$header</name>
        <default></default>
        <type>string</type>
      </argument>
    </function>
    <function namespace="" line="160" package="phpunk\compat\http">
      <name>http_response_code</name>
      <full_name>\http_response_code()</full_name>
      <docblock line="160">
        <description>Gets or sets the HTTP response status code.</description>
        <long-description></long-description>
        <tag name="package" line="160" description="phpunk\compat\http"/>
        <tag name="param" line="160" description="&lt;p&gt;OPTIONAL The optional &lt;strong&gt;code&lt;/strong&gt; will set the response code.&lt;/p&gt;" type="integer" variable="$code">
          <type>integer</type>
        </tag>
        <tag name="return" line="160" description="If response_code is provided, then the previous status code will be returned. If response_code is not provided, then the current status code will be returned." type="integer">
          <type>integer</type>
        </tag>
      </docblock>
      <argument line="0" by_reference="false">
        <name>$code</name>
        <default>null</default>
        <type>integer</type>
      </argument>
    </function>
    <parse_markers>
      <error line="115" code="PPC:ERR-50011">No summary for function \http_parse_headers()</error>
    </parse_markers>
    <source>eJylV21T40YS/mz/ilmKimzKsLzu3S1Hsg4xG1fMmjImqSugXIM1xhNkjTIawZKE/37dMyNZI8mW985btTbqfp7u6bdp/fuHaB413+/sNMkO+ZFOn16o9OPdqVhEVPEHHnD1SmZJOFVchDEood6nCBTpIyOATcKnO6N9N1cqAvH7ZtNnMx4yv0W8n8fjq8n5cPhLvze56o6ue5NR9zePtImQxGitVOqQA9I+XcF13Tu/GfWQCD6ruKxSB1QOPqzmwt/DL4P/aLZVXJlShxwdIleRDBzvXl5PuoPB8DcAXV52jXclwgpF7WGFg47qRbc/sGdez5kqdsjhas5Rtw9x7o1Gw9F6P/OK6OfxmsP/1Lvo3gzG61xMVTrNxopokL/JyjMVZDnftFd8RlrkXVavE/aVxyoGD7A0JxGVMZtMhXjiDF1sk7+aDSz9BtT0FQpjQkNtgBgtlGgpVLykCxIrycNHsr2UphIeKvbIJNmeBfQxzkuolPSVbLOvSlIrkEwlMiTi4Xc2VfjofbOR+kxKrrZSex3LTs5IZcd0UiugoK227Bkb21QpmT0lHvsaccliyKcHjTvHb18sKA/xV8ymiWT4C10RYfDq6eACjUhUlKiMCB41PONb7JGz71OrHS0wvnikJNCHgOco2E91jUO5R9oxYrQ8zzyzTtpn8Mj6BeFSeGqgCYSPJXcK/tuwWednQjI6nUOBWHWI07ZPFbUxanwKoFhA+sReAftMgwSgDukZkhqIpmygLnpIoC4WBooilBh8JrF0BqbLFGpJiUC8MJkCydnZMjWkjZpLHq2u+IJVkvFwYnNbpu1kaa/MLP5zTSmZsI25TWllHKZCbqtOdw/UxoaOEAtiVuC3obdFXORMC+r+1jBW8Ln6aWVWA97whLYTW6YV28RiQf7WfNtsnuguj1fOE6LlTDHJ/2S+GS5zRn0mVwwX/UfdaNl0ghjnTMnTRXGAuCM5nRXlZupg3RtndHVvQ4EmAc6BLHBpiaXRWPb8uvbDX2n7pU0RCeuv6mAbg/gd9MWMQnpTVZhn8rHc77bVLKltj7xhjUK78CPjKhgGUQc7vdJuo7FiRuizQrThQiyMC20KbmIg9TKf1k2OuuGRegzTLQkxB/ob/jZJ2f3epCCtxxyCx1mjubq3KdkubCH3WeNpV9ZpVjdiI9+MVRz3y5tI46FWlkc0kDeCDEv//xeKZhVTFRHmyKIMSP/vACthWGga91YYJ1b7W6aIGQnlMVJYPIwaGdGX4iTJZoLZN67jWEw5rPDPzD4RszwkNkMD79equWGVWplFdIrYj32WWzNOl7JIsueJTgkUPFRsKrBtmOuPrbtwq5MzgI0ZwMK4+X38ERsMIXbT/X+vZPsI+x6bNc29OU35RrP9aNPL45ipLGBx1hu5PizJ3L4xFVds1W/gu61mXGN+hZFOoZvezEnzyUXF06br9VL+3XeQXrWFG02cPEDo0jzu67e6ZWzTnGzdybsQEXuFxC1DvD4mKyKSTccyxAy7PTdiy8FVQria7nhIde+dyBTHgtXabC7ADIEVTb8F+OXXlc8MrlB4x4rxW82Z6e0UA8VKVRIThO4V94xsn0ApGV6N+8Mv3QEZA4mI0BEakJ0dFO7skBceBGhE28joM95s6qSk/RlxHIeskUiKZ+4zv4MkoWbCQuECPMw5amw9oBmkZP5eJVsoVBUjbLaSwcW0lnDV0HOMtGxkzkiYAN6UKtLyKaSwpA56h/v7uUmHaX0HxYrolqZq56cnfuIXrnAlMdKCED9TClE+2N//SLYVrL04TM9FqHiYMO+UPMAofTpdBTrIga61Ibw6rqRQYiqCuAZ/6Bgd/lKrnjd3DpqK+bWYwxymO52yaBPQUQ70RYS73UTNheTKXHL9EG6YBcWc1jIdO0wEIwulUws7ycFGDJtiU+SHHBJeDBSHFtsMe+Sk4xK2Ch4FjJzPBZ+yulweOcm5FM/wAnLFIEohGIaXvzr0YQk9ZotISCr5Buh8vq4ZTBpoU1mLcnOjyKXw+YzXlseRk50beAIF/7XOyWMnuj9Sn4zYHwmL67Jy7AT2JqSmFP+sdfPYiekVfV3gzEKj8NJfD86H9ELIB+77rK7cj0shvYArsd5WPp6XDM7nEwR3A9yB6uEfCkZNm9OHoG6AHe//Ix8izCLBVodA8anu783j9U+nY3VmyZgv2C685teC/+UO31nAp7Wgg3w9fRZh7WEP8oU0YOGjmm98vAOnliSbitDnOkAXlAcb4I8qwtODMKtXMhaCDOC9qP4Ax2WS3ZtR/xsYnM4N4ySCEQMXArlkPqdk/BrVUZw4bdyHuSpxiblm8hlWkp6Uom7unDgNjfXaX8Ccxe6sjeOJ09M4RD7DJfhC64bPSWFCymcY6QSGyTNkb4NGOXEa29rctLxPnP7Wy+OvsJpi8eCClSVhNY3PZhSuo48lAX5glVUtSOZTKF7MjuUsZlse7PlztQiwqRVncboJ7RFvy2uXjVX48NZ0/oR3D7PgwHnMq9j25Lo3+rU3uvXM9+RqNBwPz4cD775NfiBrxOSjCcn7g739/DssfswO39pa2jPboo7lVrugXb0vasTyNLmTZG8KJZhRx/eG/wLiJ6Y0</source>
  </file>
  <file path="database/bridge.php" generated-path="database.bridge.html" hash="dd16c0672a04736fa555611f96990cd4" package="phpunk\database">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="phpunk\database"/>
    </docblock>
    <class final="false" abstract="false" namespace="PHPunk\Database" line="12" package="phpunk\database">
      <extends>\PHPunk\Database\table</extends>
      <name>bridge_table</name>
      <full_name>\PHPunk\Database\bridge_table</full_name>
      <docblock line="12">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="12" description="phpunk\database"/>
        <tag name="inherited_from" description="\PHPunk\Database\table" refers="\PHPunk\Database\table" link="/classes/PHPunk.Database.table.html"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="32" package="phpunk\database">
        <name>select_sql</name>
        <full_name>\PHPunk\Database\bridge_table::select_sql()</full_name>
        <docblock line="32">
          <description>Generates a SELECT query string, based on the given foreign keys</description>
          <long-description></long-description>
          <tag name="param" line="32" description="&lt;p&gt;OPTIONAL Name of the related database table to query&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="32" description="&lt;p&gt;Array or iterable object of foreign key values&lt;/p&gt;" type="mixed" variable="$args">
            <type>mixed</type>
          </tag>
          <tag name="return" line="32" description="A parameterized SQL query" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\PHPunk\Database\table::select_sql()" refers="\PHPunk\Database\table::select_sql()" link="/classes/PHPunk.Database.table.html#method_select_sql"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>false</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$args</name>
          <default>array()</default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="33" package="phpunk\database">
        <name>__construct</name>
        <full_name>\PHPunk\Database\table::__construct()</full_name>
        <docblock line="33">
          <description></description>
          <long-description></long-description>
          <tag name="property" line="33" description="Name of database table" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="property" line="33" description="Name of primary key" type="string" variable="$pkey">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$pkey</name>
          <default>'id'</default>
          <type/>
        </argument>
        <inherited_from>\PHPunk\Database\table</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="57" package="phpunk\database">
        <name>relation_exists</name>
        <full_name>\PHPunk\Database\table::relation_exists()</full_name>
        <docblock line="57">
          <description>Returns whether or not a relationship exists with the given name</description>
          <long-description></long-description>
          <tag name="param" line="57" description="&lt;p&gt;Name of the table relationship&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="57" description="TRUE if relationship exists, FALSE otherwise" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\PHPunk\Database\table</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="66" package="phpunk\database">
        <name>get_relation</name>
        <full_name>\PHPunk\Database\table::get_relation()</full_name>
        <docblock line="66">
          <description>Returns a relation object for the given name</description>
          <long-description></long-description>
          <tag name="param" line="66" description="&lt;p&gt;Name of the table relationship&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="66" description="The named relation object" type="object">
            <type>object</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\PHPunk\Database\table</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="75" package="phpunk\database">
        <name>add_relation</name>
        <full_name>\PHPunk\Database\table::add_relation()</full_name>
        <docblock line="75">
          <description>Adds a relation for the given name</description>
          <long-description></long-description>
          <tag name="param" line="75" description="&lt;p&gt;Name of the table relationship&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="75" description="&lt;p&gt;The relation object&lt;/p&gt;" type="object" variable="$rel">
            <type>object</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$rel</name>
          <default></default>
          <type>object</type>
        </argument>
        <inherited_from>\PHPunk\Database\table</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="83" package="phpunk\database">
        <name>remove_relation</name>
        <full_name>\PHPunk\Database\table::remove_relation()</full_name>
        <docblock line="83">
          <description>Removes the relation with the given name</description>
          <long-description></long-description>
          <tag name="param" line="83" description="&lt;p&gt;Name of the table relationship&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\PHPunk\Database\table</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="90" package="phpunk\database">
        <name>clear_relations</name>
        <full_name>\PHPunk\Database\table::clear_relations()</full_name>
        <docblock line="90">
          <description>Removes all relationships from this table.</description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\PHPunk\Database\table</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="99" package="phpunk\database">
        <name>select_sql</name>
        <full_name>\PHPunk\Database\table::select_sql()</full_name>
        <docblock line="99">
          <description>Generates a SELECT query string, based on this table's primary key</description>
          <long-description></long-description>
          <tag name="param" line="99" description="&lt;p&gt;OPTIONAL relationship name to query&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="99" description="A parameterized SQL query" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>false</default>
          <type>string</type>
        </argument>
        <inherited_from>\PHPunk\Database\table</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="118" package="phpunk\database">
        <name>insert_sql</name>
        <full_name>\PHPunk\Database\table::insert_sql()</full_name>
        <docblock line="118">
          <description>Generates an INSERT query string, based on the given data</description>
          <long-description></long-description>
          <tag name="param" line="118" description="&lt;p&gt;An array or iterable object of key-value pairs&lt;/p&gt;" type="mixed" variable="$record">
            <type>mixed</type>
          </tag>
          <tag name="param" line="118" description="&lt;p&gt;An array to be populated with query parameters&lt;/p&gt;" type="array" variable="$params">
            <type>array</type>
          </tag>
          <tag name="return" line="118" description="A parameterized SQL query" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$record</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="true">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\PHPunk\Database\table</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="140" package="phpunk\database">
        <name>update_sql</name>
        <full_name>\PHPunk\Database\table::update_sql()</full_name>
        <docblock line="140">
          <description>Generates an UPDATE query string, based on the given data</description>
          <long-description></long-description>
          <tag name="param" line="140" description="&lt;p&gt;An array or iterable object of key-value pairs&lt;/p&gt;" type="mixed" variable="$record">
            <type>mixed</type>
          </tag>
          <tag name="param" line="140" description="&lt;p&gt;An array to be populated with query parameters&lt;/p&gt;" type="array" variable="$params">
            <type>array</type>
          </tag>
          <tag name="return" line="140" description="A parameterized SQL query" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$record</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="true">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\PHPunk\Database\table</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="162" package="phpunk\database">
        <name>delete_sql</name>
        <full_name>\PHPunk\Database\table::delete_sql()</full_name>
        <docblock line="162">
          <description>Generates a DELETE query string, based on this table's primary key</description>
          <long-description></long-description>
          <tag name="param" line="162" description="&lt;p&gt;OPTIONAL relationship name to query&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="162" description="A parameterized SQL query" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>false</default>
          <type>string</type>
        </argument>
        <inherited_from>\PHPunk\Database\table</inherited_from>
      </method>
      <property final="false" static="false" visibility="public" line="12">
        <name>$join</name>
        <default/>
        <docblock>
          <description>Alias for the INNER JOIN clause</description>
          <long-description/>
          <tag name="var" description="&lt;p&gt;Alias for the INNER JOIN clause&lt;/p&gt;" type="string" line="12">
            <type by_reference="false">string</type>
          </tag>
          <tag name="magic" line="12"/>
          <tag name="property" line="12" description="Alias for the INNER JOIN clause" type="string" variable="$join">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="12">
        <name>$inner</name>
        <default/>
        <docblock>
          <description>The INNER JOIN clause for this bridge table</description>
          <long-description/>
          <tag name="var" description="&lt;p&gt;The INNER JOIN clause for this bridge table&lt;/p&gt;" type="string" line="12">
            <type by_reference="false">string</type>
          </tag>
          <tag name="magic" line="12"/>
          <tag name="property" line="12" description="The INNER JOIN clause for this bridge table" type="string" variable="$inner">
            <type>string</type>
          </tag>
        </docblock>
      </property>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="12" code="PPC:ERR-50005">No summary for class \PHPunk\Database\bridge_table</error>
    </parse_markers>
    <source>eJytVNtO20AQfba/YogsJUQQ3pMGGkEoVGlCAxUPbWVv7HGy4KzNeg2kFf/e2YsTB/FYCYnM/cw5s/50VqwK/6Tb9aELnwsWP7IlAvkq8fgrYYotWIkUO/F9wdZYUgbCzdWNDl+48MDfNZB5gVJtoFSSiyUEDzkXMMo4KyHNJagVwvV0Op7D19n1FOKMVab9B5VcCJRw91GBa8VLWEieEF7CkVmUlFDW7tC4AV8ViqS0SfDX9zRYT8/kS5FLhDVb8hjWqFZ5ogMnvldUi4x8aSVixXMBYbhE1QkecXOoO3jlC1fxChoeLyYmoK33bfd3ttnCOjyJqpICAo38+DTUqZ22Wa59ONAZCaasytRedsEkCtXvNxDo3Def/narfEEawxSWwOB2PBmf38FThbJm8wi0TgnQJlqBJX9GoUlEYgCoZWn5oFlsvRVA6w2zm7vr2XQ0gam28tTUS8xoVgL1fThqVW6HNput+SslBkwuSxhJyTZA0nFFYHVFvnjAWOm2DTDwzLIKHSTHgsM0AtMVqZ7/ob633ye7kR/IVmJG/cPyKevYdYaQsqzEI4doCExj6hxaDXlKitJy5HciEeeh2Za62RYu1QvszttM0/6ATEo/Pi1s9Gzf7DszNaaRPLAyDaHlZKOVwvPR5Dy8nP2YXoTz2f0tRHZY1OvC5Xz2zXXR99Oit+dZ4Ae4LtSmYxarQXrBywol7va06Z5mm5n7NTTQ4wxSfVkm6Ip+/taoosZ6US8yaREFztzkeoHeENpwfzWej+l/D/i6yPIEO20YTS+gTXybnvbM30xl/RpMvT1pf+s1Kg32b7x+rlyQ/IJl716s5M90lI0na95XoDYFWjbMT4JOt6TyqqCvjYvq4fZDtaemWXDHlA3Ux2BJI+s/n4OBQWS2wMI1X71af5jp340arYg1nSxRc8A2Wuho6z3HZpbh+M3/ByX71Hw=</source>
  </file>
  <file path="database/result.php" generated-path="database.result.html" hash="c169194175dca9177e05c9bf533e00eb" package="phpunk\database">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="phpunk\database"/>
    </docblock>
    <namespace-alias name="object">\PHPunk\Util\object</namespace-alias>
    <class final="false" abstract="false" namespace="PHPunk\Database" line="17" package="phpunk\database">
      <extends>\PHPunk\Util\object</extends>
      <name>result</name>
      <full_name>\PHPunk\Database\result</full_name>
      <docblock line="17">
        <description>Contains a set of data return from a database query</description>
        <long-description></long-description>
        <tag name="package" line="17" description="phpunk\database"/>
        <tag name="inherited_from" description="\PHPunk\Util\object" refers="\PHPunk\Util\object" link="/classes/PHPunk.Util.object.html"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="33" package="phpunk\database">
        <name>__construct</name>
        <full_name>\PHPunk\Database\result::__construct()</full_name>
        <docblock line="33">
          <description>Creates a shallow clone of the passed data.</description>
          <long-description></long-description>
          <tag name="param" line="33" description="&lt;p&gt;Array of database records&lt;/p&gt;" type="array" variable="$records">
            <type>array</type>
          </tag>
          <tag name="param" line="33" description="&lt;p&gt;Total count of matching records&lt;/p&gt;" type="integer" variable="$found">
            <type>integer</type>
          </tag>
          <tag name="param" line="33" description="&lt;p&gt;OPTIONAL database table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\PHPunk\Util\object::__construct()" refers="\PHPunk\Util\object::__construct()" link="/classes/PHPunk.Util.object.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$records</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$found</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default>false</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="62" package="phpunk\database">
        <name>map</name>
        <full_name>\PHPunk\Database\result::map()</full_name>
        <docblock line="62">
          <description>Returns a new result after applying the given callback function to each
record in the result.</description>
          <long-description></long-description>
          <tag name="param" line="62" description="&lt;p&gt;The callback function to apply to each record&lt;/p&gt;" type="callable" variable="$func">
            <type>callable</type>
          </tag>
          <tag name="return" line="62" description="a new result instance" type="object">
            <type>object</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$func</name>
          <default></default>
          <type>callable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="72" package="phpunk\database">
        <name>key_map</name>
        <full_name>\PHPunk\Database\result::key_map()</full_name>
        <docblock line="72">
          <description>Returns a new result keyed by the results of the given callback function.</description>
          <long-description></long-description>
          <tag name="param" line="72" description="&lt;p&gt;The callback function to apply to each record&lt;/p&gt;" type="callable" variable="$func">
            <type>callable</type>
          </tag>
          <tag name="return" line="72" description="a new result instance" type="object">
            <type>object</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$func</name>
          <default></default>
          <type>callable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="26" package="phpunk\util">
        <name>__construct</name>
        <full_name>\PHPunk\Util\object::__construct()</full_name>
        <docblock line="26">
          <description>Creates a shallow clone of the passed data.</description>
          <long-description></long-description>
          <tag name="param" line="26" description="&lt;p&gt;OPTIONAL Any array or traversable object&lt;/p&gt;" type="mixed" variable="$data">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>array()</default>
          <type>mixed</type>
        </argument>
        <inherited_from>\PHPunk\Util\object</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="61" package="phpunk\util">
        <name>has</name>
        <full_name>\PHPunk\Util\mutable::has()</full_name>
        <docblock line="61">
          <description>Determine whether or not a given key exists.</description>
          <long-description></long-description>
          <tag name="param" line="61" description="&lt;p&gt;The key&lt;/p&gt;" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="return" line="61" description="TRUE if the key exists, FALSE otherwise" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\PHPunk\Util\mutable</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="71" package="phpunk\util">
        <name>get</name>
        <full_name>\PHPunk\Util\mutable::get()</full_name>
        <docblock line="71">
          <description>Get the stored value for a given key.</description>
          <long-description></long-description>
          <tag name="param" line="71" description="&lt;p&gt;The key&lt;/p&gt;" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="param" line="71" description="&lt;p&gt;OPTIONAL The value to return if the given key does not exist&lt;/p&gt;" type="mixed" variable="$default">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$default</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <inherited_from>\PHPunk\Util\mutable</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="81" package="phpunk\util">
        <name>put</name>
        <full_name>\PHPunk\Util\mutable::put()</full_name>
        <docblock line="81">
          <description>Store a value for a given key.</description>
          <long-description></long-description>
          <tag name="param" line="81" description="&lt;p&gt;The key&lt;/p&gt;" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="param" line="81" description="&lt;p&gt;The value to be stored&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\PHPunk\Util\mutable</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="90" package="phpunk\util">
        <name>remove</name>
        <full_name>\PHPunk\Util\mutable::remove()</full_name>
        <docblock line="90">
          <description>Remove a key-value pair from the store.</description>
          <long-description></long-description>
          <tag name="param" line="90" description="&lt;p&gt;The key&lt;/p&gt;" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\PHPunk\Util\mutable</inherited_from>
      </method>
      <property final="false" static="false" visibility="public" line="17">
        <name>$table</name>
        <default/>
        <docblock>
          <description>The name of the related database table</description>
          <long-description/>
          <tag name="var" description="&lt;p&gt;The name of the related database table&lt;/p&gt;" type="string" line="17">
            <type by_reference="false">string</type>
          </tag>
          <tag name="magic" line="17"/>
          <tag name="property" line="17" description="The name of the related database table" type="string" variable="$table">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="17">
        <name>$found</name>
        <default/>
        <docblock>
          <description>The total number of records matching the query</description>
          <long-description/>
          <tag name="var" description="&lt;p&gt;The total number of records matching the query&lt;/p&gt;" type="integer" line="17">
            <type by_reference="false">integer</type>
          </tag>
          <tag name="magic" line="17"/>
          <tag name="property" line="17" description="The total number of records matching the query" type="integer" variable="$found">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="17">
        <name>$first</name>
        <default/>
        <docblock>
          <description>The first record of the returned data set</description>
          <long-description/>
          <tag name="var" description="&lt;p&gt;The first record of the returned data set&lt;/p&gt;" type="object" line="17">
            <type by_reference="false">object</type>
          </tag>
          <tag name="magic" line="17"/>
          <tag name="property" line="17" description="The first record of the returned data set" type="object" variable="$first">
            <type>object</type>
          </tag>
        </docblock>
      </property>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="33" code="PPC:ERR-50008">No summary for method __construct()</error>
    </parse_markers>
    <source>eJzNVMGO0zAQPSdfMYdI264Ky7kFlhUcQEJshZYTiyrHnaSmjh1sp0uF9t8ZO3bbrFKBOHFLPDNv3rzn8cvrdtPmV5eXOVzCm5bxLasR6KxT2/s1c6xkFil2leeKNWgpA2H5funD72J4keedPZx+cULe6/I7ckeBiPxWK8eEssDAogNdgccGg64zCiqjG4qkdvCjQ7Onsp6T0S0atwfrjFA1FJQkEe42CJ6Rx3L0bVAyh+sjSEgbIgjlsEYDRaU7tQ4QTjsmQXVNSecEZZBrs7bQMMc3vp3HTnxOoPoBCUkY6wJS/9XXH0n5+SIrP3lQkktmLcVsJx3gT4eKGkbAX3nmJct8M1ErbTCwNopY7pgRYajMo2StETsaGYpVGJXE/ofSoMSgtGWGkRvGsD0USY6b8BttC/LGyGnNU3mDtJy+g+EHRUcqh9beLu8+3H66+fjEy2B3GqArpeBQdYo7oRWsVlwrQum4myTSs0hklnBfQcWkxakXOaPGqNx8PlY5XVBC4TbCPnvdK0S1NN2OyUmPOchI6EX0IXscsaJhNRFu0G30+uwQNRKJLe57ivZBkGRwcpJxr8ZF6HMx9wdZXKEBl8UxNbAdT43WH1P9BR6mCms9I1/w9cW3KVxD+oY5LY2UoXyNFaOrPKg8ynuYyec+DsX5HJL9q6DwIW0Eq+jSAmtbuU8LWIsdKuBMypJeqKNiTgMyvglYcfOEipvnsZ77yOlF8xDBrcJjhL0dRQ3dE3yE7nHifHFdB8TpfXNM8XN3tGHtJLTtvYxAvt6irCZh41aHpFnyyemwfJPpdDa0brr4CzFJeHp+yv2JKDa9TmdU/a9EI/6rJ8L5y2QBaOH+LFlYU1rbDu0hv/+djOSedYXrphQKwz3270oPMW7IY/4bbKdc8g==</source>
  </file>
  <file path="database/record.php" generated-path="database.record.html" hash="049628b372907986b4ae8ab47bfe3e6c" package="phpunk\database">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="phpunk\database"/>
    </docblock>
    <namespace-alias name="object">\PHPunk\Util\object</namespace-alias>
    <class final="false" abstract="false" namespace="PHPunk\Database" line="14" package="phpunk\database">
      <extends>\PHPunk\Util\object</extends>
      <name>record</name>
      <full_name>\PHPunk\Database\record</full_name>
      <docblock line="14">
        <description>Represents a row in a database table</description>
        <long-description></long-description>
        <tag name="package" line="14" description="phpunk\database"/>
        <tag name="inherited_from" description="\PHPunk\Util\object" refers="\PHPunk\Util\object" link="/classes/PHPunk.Util.object.html"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="24" package="phpunk\database">
        <name>__construct</name>
        <full_name>\PHPunk\Database\record::__construct()</full_name>
        <docblock line="24">
          <description>Creates a shallow clone of the passed data.</description>
          <long-description></long-description>
          <tag name="param" line="24" description="&lt;p&gt;OPTIONAL Any array or traversable object&lt;/p&gt;" type="mixed" variable="$data">
            <type>mixed</type>
          </tag>
          <tag name="param" line="24" description="&lt;p&gt;OPTIONAL The name of the related database table&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\PHPunk\Util\object::__construct()" refers="\PHPunk\Util\object::__construct()" link="/classes/PHPunk.Util.object.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>array()</default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default>false</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="26" package="phpunk\util">
        <name>__construct</name>
        <full_name>\PHPunk\Util\object::__construct()</full_name>
        <docblock line="26">
          <description>Creates a shallow clone of the passed data.</description>
          <long-description></long-description>
          <tag name="param" line="26" description="&lt;p&gt;OPTIONAL Any array or traversable object&lt;/p&gt;" type="mixed" variable="$data">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>array()</default>
          <type>mixed</type>
        </argument>
        <inherited_from>\PHPunk\Util\object</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="61" package="phpunk\util">
        <name>has</name>
        <full_name>\PHPunk\Util\mutable::has()</full_name>
        <docblock line="61">
          <description>Determine whether or not a given key exists.</description>
          <long-description></long-description>
          <tag name="param" line="61" description="&lt;p&gt;The key&lt;/p&gt;" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="return" line="61" description="TRUE if the key exists, FALSE otherwise" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\PHPunk\Util\mutable</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="71" package="phpunk\util">
        <name>get</name>
        <full_name>\PHPunk\Util\mutable::get()</full_name>
        <docblock line="71">
          <description>Get the stored value for a given key.</description>
          <long-description></long-description>
          <tag name="param" line="71" description="&lt;p&gt;The key&lt;/p&gt;" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="param" line="71" description="&lt;p&gt;OPTIONAL The value to return if the given key does not exist&lt;/p&gt;" type="mixed" variable="$default">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$default</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <inherited_from>\PHPunk\Util\mutable</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="81" package="phpunk\util">
        <name>put</name>
        <full_name>\PHPunk\Util\mutable::put()</full_name>
        <docblock line="81">
          <description>Store a value for a given key.</description>
          <long-description></long-description>
          <tag name="param" line="81" description="&lt;p&gt;The key&lt;/p&gt;" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="param" line="81" description="&lt;p&gt;The value to be stored&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\PHPunk\Util\mutable</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="90" package="phpunk\util">
        <name>remove</name>
        <full_name>\PHPunk\Util\mutable::remove()</full_name>
        <docblock line="90">
          <description>Remove a key-value pair from the store.</description>
          <long-description></long-description>
          <tag name="param" line="90" description="&lt;p&gt;The key&lt;/p&gt;" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\PHPunk\Util\mutable</inherited_from>
      </method>
      <property final="false" static="false" visibility="public" line="14">
        <name>$table</name>
        <default/>
        <docblock>
          <description>The name of the related database table</description>
          <long-description/>
          <tag name="var" description="&lt;p&gt;The name of the related database table&lt;/p&gt;" type="string" line="14">
            <type by_reference="false">string</type>
          </tag>
          <tag name="magic" line="14"/>
          <tag name="property" line="14" description="The name of the related database table" type="string" variable="$table">
            <type>string</type>
          </tag>
        </docblock>
      </property>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="24" code="PPC:ERR-50008">No summary for method __construct()</error>
    </parse_markers>
    <source>eJyNkUFr20AQhc+7v2IOgjQmxXenaRPooYXSmJKemmDGq7G0tbQrZkdOTPF/76xkOzGm0JOWeTPvfTP68KmrOzudTCxM4LZDt8aKQGt9WD+WKLjERKpNrQ3YUtIOgvmXeZY/7+Vra/t0rP4U3zzG5W9yosLe+Qd1TImCJEDg+Aw+6OPgD/ppaCTg2BHLFpKwDxUUgwQPNUHOh7gC0TdTg0LlucPUugZT0gYXuQR6EQplgpEH/liTgUxO8lWITAoixAEb2CD7wcRkF9Ox32gEFIvBWld5He2QsYXWvyhBkRHgfv7w9f773Te4C1tAZtxCZBDGDXEaNhgJ3s6fbnh0+M9V95T9svEOVn1w4mOAxcLFoMa9k3cj2Q38ero6hNzACptEl/kQRin0h8xmZzOX16oWUvv0/uPiMFjsz2B29vyILVZK0ZLUsfwnWUXqv6btmJ6evbga3lSMy9tdDDkXs1wwTNJzgBOWDGdKWmHfyEnX6z7HpNy7y8g7+xeuSunF</source>
  </file>
  <file path="event.php" generated-path="event.html" hash="2d697349669f928d3525d4b276fb8fa5" package="phpunk">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="phpunk"/>
    </docblock>
    <class final="false" abstract="false" namespace="PHPunk" line="8" package="phpunk">
      <extends/>
      <name>event_manager</name>
      <full_name>\PHPunk\event_manager</full_name>
      <docblock line="8">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="8" description="phpunk"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk" line="20" package="phpunk">
        <name>listen</name>
        <full_name>\PHPunk\event_manager::listen()</full_name>
        <docblock line="20">
          <description>Adds a callback handler for the specified event</description>
          <long-description></long-description>
          <tag name="param" line="20" description="&lt;p&gt;The name of the event&lt;/p&gt;" type="string" variable="$event">
            <type>string</type>
          </tag>
          <tag name="param" line="20" description="&lt;p&gt;The callback function to handle the event&lt;/p&gt;" type="Callable" variable="$callback">
            <type>Callable</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$event</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default></default>
          <type>Callable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk" line="34" package="phpunk">
        <name>trigger</name>
        <full_name>\PHPunk\event_manager::trigger()</full_name>
        <docblock line="34">
          <description>Fires all callback handlers for the specified event</description>
          <long-description></long-description>
          <tag name="param" line="34" description="&lt;p&gt;The name of the event&lt;/p&gt;" type="string" variable="$event">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$event</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="8" code="PPC:ERR-50005">No summary for class \PHPunk\event_manager</error>
    </parse_markers>
    <source>eJytUstqwzAQPFtfsQUf7JASeu6bQukxh95CMBtnbYsospHkQCn59+5aqU0f6amgizQzu7Ozurnvmk4tZjMFM3josNxhTcBvvd3x00Ipi3vyDBAsX5b8eq1UadB7oAPZUOzRssLBu0qkSiJldG1bR6BtIGfRwAGdxo0hQRcq6Zw+YCBIiwbt1pDzcAurNRceSzxutx4QSjRmw57gRISqdRAaAt9RqStN2+hCNLF1hw734IPTtoZ0AOGVBTIFtNUgHiWf9CduI/4gHRuKZrxUvS2Dbi2E9uTkax2Zqd8YXU5Mo30gm0UH86lwLkEluoJM+6I89c0mOOID4UJ7TyFLQ6P95d2Y1SrWXOe5EJNz8BjpecpKSGPra6YeFZ9pC8/aEa/BmB+L8P+8iV8SZGHNH+sUYcwlRVfLZ0Hn8K3wzKdMBEVNoRAsy+dwlQ9jx4z/TjCGzaMQlg2cJQL67xtMErkXvSdXDA4GS9MieeXiJ5dUJdYY7VF9ADnwFQI=</source>
  </file>
  <file path="util/collectible.php" generated-path="util.collectible.html" hash="0558df16174b2656e1974b9425d88248" package="phpunk\util">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="phpunk\util"/>
    </docblock>
    <namespace-alias name="ArrayAccess">\ArrayAccess</namespace-alias>
    <namespace-alias name="Countable">\Countable</namespace-alias>
    <namespace-alias name="Iterator">\Iterator</namespace-alias>
    <function namespace="PHPunk\Util" line="192" package="phpunk\util">
      <name>is_collectible</name>
      <full_name>\PHPunk\Util\is_collectible()</full_name>
      <docblock line="192">
        <description>Returns whether or not the object is an instance of collectible.</description>
        <long-description></long-description>
        <tag name="package" line="192" description="phpunk\util"/>
        <tag name="param" line="192" description="&lt;p&gt;Any object&lt;/p&gt;" type="object" variable="$obj">
          <type>object</type>
        </tag>
        <tag name="return" line="192" description="Returns **TRUE** if **obj** collectible, **FALSE** otherwise." type="boolean">
          <type>boolean</type>
        </tag>
      </docblock>
      <argument line="0" by_reference="false">
        <name>$obj</name>
        <default></default>
        <type>object</type>
      </argument>
    </function>
    <interface namespace="PHPunk\Util" line="184" package="phpunk\util">
      <extends>\ArrayAccess</extends>
      <extends>\Countable</extends>
      <extends>\Iterator</extends>
      <name>collection</name>
      <full_name>\PHPunk\Util\collection</full_name>
      <docblock line="184">
        <description>This inteface consolidates the interfaces ArrayAccess, Countable, and Iterator.</description>
        <long-description>Classes using the collectible trait must implement this interface.</long-description>
        <tag name="package" line="184" description="phpunk\util"/>
      </docblock>
    </interface>
    <trait namespace="PHPunk\Util" line="16" package="phpunk\util">
      <name>collectible</name>
      <full_name>\PHPunk\Util\collectible</full_name>
      <docblock line="16">
        <description>Array-style key-value storage
'Implements' ArrayAccess, Countable, Iterator</description>
        <long-description></long-description>
        <tag name="see" line="16" description="PHPunk Wiki" link="http://github.com/oneeyedjames/phpunk/wiki/Mutable-Objects"/>
        <tag name="package" line="16" description="phpunk\util"/>
      </docblock>
      <property static="false" visibility="private" namespace="PHPunk\Util" line="21" package="phpunk\util">
        <name>$_data</name>
        <full_name>\PHPunk\Util\collectible::_data</full_name>
        <default>array()</default>
        <docblock line="21">
          <description>Internal key-value storage</description>
          <long-description></long-description>
          <tag name="var" line="21" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Util" line="37" package="phpunk\util">
        <name>sort</name>
        <full_name>\PHPunk\Util\collectible::sort()</full_name>
        <docblock line="37">
          <description>Sorts the data collection. If first argument is callable, it will be used
as a comparison function. Otherwise, it will be used as a boolean flag to
reverse-sort the collection. Omitting the sorting mode flag will sort the
collection by its values and reset its keys to sequential indeces.</description>
          <long-description>The sorting mode flag works as follows:
  'k' will sort the collection by its keys
  'a' will sort the collection by its values, preserving its keys</long-description>
          <tag name="param" line="37" description="&lt;p&gt;Whether to reverse-sort the collection&lt;/p&gt;" type="mixed" variable="$reverse">
            <type>mixed</type>
          </tag>
          <tag name="param" line="37" description="&lt;p&gt;OPTIONAL Sorting mode flag&lt;/p&gt;" type="string" variable="$mode">
            <type>string</type>
          </tag>
          <tag name="return" line="37" description="TRUE on success, FALSE on failure" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$reverse</name>
          <default>false</default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$mode</name>
          <default>''</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Util" line="65" package="phpunk\util">
        <name>walk</name>
        <full_name>\PHPunk\Util\collectible::walk()</full_name>
        <docblock line="65">
          <description>Apply a callback functon to each item in the collection.</description>
          <long-description></long-description>
          <tag name="param" line="65" description="&lt;p&gt;A callable to apply to each item&lt;/p&gt;" type="mixed" variable="$func">
            <type>mixed</type>
          </tag>
          <tag name="param" line="65" description="&lt;p&gt;OPTIONAL Data to pass along to callable&lt;/p&gt;" type="mixed" variable="$data">
            <type>mixed</type>
          </tag>
          <tag name="return" line="65" description="TRUE" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$func</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Util" line="72" package="phpunk\util">
        <name>keys</name>
        <full_name>\PHPunk\Util\collectible::keys()</full_name>
        <docblock line="72">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="72" description="Key set for collection" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Util" line="79" package="phpunk\util">
        <name>values</name>
        <full_name>\PHPunk\Util\collectible::values()</full_name>
        <docblock line="79">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="79" description="Value set for collection" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Util" line="87" package="phpunk\util">
        <name>toArray</name>
        <full_name>\PHPunk\Util\collectible::toArray()</full_name>
        <docblock line="87">
          <description>Returns collection as array.</description>
          <long-description></long-description>
          <tag name="return" line="87" description="collection of data" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="PHPunk\Util" line="95" package="phpunk\util">
        <name>loadArray</name>
        <full_name>\PHPunk\Util\collectible::loadArray()</full_name>
        <docblock line="95">
          <description>Replaces internal data collection.</description>
          <long-description></long-description>
          <tag name="param" line="95" description="&lt;p&gt;OPTIONAL Any array or traversable object&lt;/p&gt;" type="mixed" variable="$data">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
    </trait>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="72" code="PPC:ERR-50008">No summary for method keys()</error>
      <error line="79" code="PPC:ERR-50008">No summary for method values()</error>
    </parse_markers>
    <source>eJy1WFFvGzcMfrZ/BQcEcGI49nuyrDG6bgvWNUGTrA9dEcg2z1atk26Szo5R5L+PlO4ud/Y5LobmIUhOIj9+pEiJzM9vskXWHfX7XejDZSamSzFHoLVcL//JvVS0Pup2tUjR0S7CzR83vHVPW+fdbu4QxtaKzXg6RecG8Nbk2ouJwgFcebTCG0tiBX6QPHV+oxCWuDldCZUjOJIhoyzQu0ozhSlq73oHcUkhkHaIsPA+OxuN5tIv8slwatKR0YgbnH1l4qPoz2gtl3L0Vx5wTq8nX3HqXeEQfKK94Ku3QnqYGqVoW5IkfOt22IEOGbvSZFwL1UKfty9XwoJg3vw56nYyK1fCIxw9zIQXcAGfv1A4KrhbY4mBXyCE7dKo0UO4SiCR1nmCm+ccEZAOpkKpGASiuJZKwQSBzmAW0IQDxkgzYaUzGpJcF2DXZMKupdtVjEoTYxQK0lBiDt4ENIsrtA5PHXEMFOvsrlPpvdTzsMES/HdqZhghgoVSMaA9K8NkQyQchOiRcT0jUw59WKSwUjwMOPw3J58lRVrqGVIODBkmQN21mzR26dibhCyZtTsLsgC9Za9Jp4UKWy3FxWHxyHwAGfO2K+ZRR4mZQIcgUkjlI8X4qIglfFognwR7+EJ46wDOW8Y/Co5e39xdXX8Yvw9503A/qlj0udXVad59vH8HRNvlRRH9Nn5/G1YSIVVusUzSfKLktEqX4PpxxfmCpBVnTuRwAb3eCZdERyZwLN1DmZOVxknc7ri19NMFHAe9Yq0zFQRJQT4LX52CcS6iTb+Q7vSXUCuDKmon5zXN5bbm8rDmDBORK7+leFDvqcs/3XZHmn4UmFXM3lDV7uCfwBns+hltNZ3bhVu2w+06H+EaHu+itYO1Y1EUnmo31jjL1IavGTr1Cb0WMWsoaSilUVCUpMeUanb7xmgpCtaEcXWnMYII6HWoFr1wVVal8Ct/kUYmHJW/MnwnmQp0b13sSf21UMvjwGxQGLoAnSsVT73ACRf8QxRt5k9NkYNXD9xlXRn+xA3wnZcYu1X4LaT4YjluYRDWtw9sv82/43P1vVbjLddmt9h5yfLHIO/qlyc/NKw+bKFWEzNJeAv3kPImdAVNVnUiOzwyRV2Lo4wsHu7th/Zggo31pmBJUaPmgIso5KsJDUT10BtPX6RecVVGzCLbmBD1S1PU1osbpe4FZd1R4U3nCZCu3/KyfW5LDms/h6QJIrmBOoQgiy7rwZsG2x20GIYXseboCzHKHet2kFqVuFPauX4u5VwbiyDLPpEDbk1abxbjWSd07HuSyCQJVcG7R+k8cYlf7eX1gA2hAbxYbT+O2+/oW4ld1u1/LiS+vB6P22ce5Huo+8inlQfnXZB5PUL32m2HJo9LbYS++4Sq6eIgjSlLNq+fuPS/MqMcZQ6bza3FHcPF4uuapjJomuWF1zWp8bF0Nfz5utYsrmnGqHzczqYfb5BqRM4OxBR+uoidR7D+VI3QdyQTDDA+pZ52hsBoxIxjZGXa7R2feeAqqQ4Z8q2i1okUclcOdPXhN47DaU6TaOUx+JJFsDUMc3P1WX/N6fRQz/aTqWL27dnFsndYF8MS7WoTZ6T4iPAkTG2c1M4LTfaoZagxHpb/F4hveqFyRL/DU1682i1tYWm33+cGsd8HeuD6fZLv9+v4A1oMgxQtm3KujiGoTnj7pSaQcNxlw8JkSvpN9ud01v8B982jpg==</source>
  </file>
  <file path="error.php" generated-path="error.html" hash="c37f2b37850f67ad5ac5b319e2b18c0f" package="phpunk">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="phpunk"/>
    </docblock>
    <namespace-alias name="JsonSerializable">\JsonSerializable</namespace-alias>
    <namespace-alias name="collectible">\PHPunk\Util\collectible</namespace-alias>
    <namespace-alias name="collection">\PHPunk\Util\collection</namespace-alias>
    <class final="false" abstract="false" namespace="PHPunk" line="17" package="phpunk">
      <extends/>
      <implements>\PHPunk\Util\collection</implements>
      <implements>\JsonSerializable</implements>
      <name>api_error</name>
      <full_name>\PHPunk\api_error</full_name>
      <docblock line="17">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="17" description="phpunk"/>
      </docblock>
      <property static="false" visibility="private" namespace="PHPunk" line="21" package="phpunk\util">
        <name>$_data</name>
        <full_name>\PHPunk\Util\collectible::_data</full_name>
        <default>array()</default>
        <docblock line="21">
          <description>Internal key-value storage</description>
          <long-description></long-description>
          <tag name="var" line="21" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk" line="37" package="phpunk">
        <name>__construct</name>
        <full_name>\PHPunk\api_error::__construct()</full_name>
        <docblock line="37">
          <description>Creates a new error object with the given code and message</description>
          <long-description></long-description>
          <tag name="param" line="37" description="&lt;p&gt;Machine-readable error code&lt;/p&gt;" type="string" variable="$code">
            <type>string</type>
          </tag>
          <tag name="param" line="37" description="&lt;p&gt;Human-readable error message&lt;/p&gt;" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="37" description="&lt;p&gt;OPTIONAL array or traversable object of additional data&lt;/p&gt;" type="mixed" variable="$data">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$code</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>array()</default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk" line="37" package="phpunk\util">
        <name>sort</name>
        <full_name>\PHPunk\Util\collectible::sort()</full_name>
        <docblock line="37">
          <description>Sorts the data collection. If first argument is callable, it will be used
as a comparison function. Otherwise, it will be used as a boolean flag to
reverse-sort the collection. Omitting the sorting mode flag will sort the
collection by its values and reset its keys to sequential indeces.</description>
          <long-description>The sorting mode flag works as follows:
  'k' will sort the collection by its keys
  'a' will sort the collection by its values, preserving its keys</long-description>
          <tag name="param" line="37" description="&lt;p&gt;Whether to reverse-sort the collection&lt;/p&gt;" type="mixed" variable="$reverse">
            <type>mixed</type>
          </tag>
          <tag name="param" line="37" description="&lt;p&gt;OPTIONAL Sorting mode flag&lt;/p&gt;" type="string" variable="$mode">
            <type>string</type>
          </tag>
          <tag name="return" line="37" description="TRUE on success, FALSE on failure" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$reverse</name>
          <default>false</default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$mode</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <inherited_from>\PHPunk\Util\collectible</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk" line="65" package="phpunk\util">
        <name>walk</name>
        <full_name>\PHPunk\Util\collectible::walk()</full_name>
        <docblock line="65">
          <description>Apply a callback functon to each item in the collection.</description>
          <long-description></long-description>
          <tag name="param" line="65" description="&lt;p&gt;A callable to apply to each item&lt;/p&gt;" type="mixed" variable="$func">
            <type>mixed</type>
          </tag>
          <tag name="param" line="65" description="&lt;p&gt;OPTIONAL Data to pass along to callable&lt;/p&gt;" type="mixed" variable="$data">
            <type>mixed</type>
          </tag>
          <tag name="return" line="65" description="TRUE" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$func</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <inherited_from>\PHPunk\Util\collectible</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk" line="72" package="phpunk\util">
        <name>keys</name>
        <full_name>\PHPunk\Util\collectible::keys()</full_name>
        <docblock line="72">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="72" description="Key set for collection" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\PHPunk\Util\collectible</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk" line="79" package="phpunk\util">
        <name>values</name>
        <full_name>\PHPunk\Util\collectible::values()</full_name>
        <docblock line="79">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="79" description="Value set for collection" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\PHPunk\Util\collectible</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk" line="87" package="phpunk\util">
        <name>toArray</name>
        <full_name>\PHPunk\Util\collectible::toArray()</full_name>
        <docblock line="87">
          <description>Returns collection as array.</description>
          <long-description></long-description>
          <tag name="return" line="87" description="collection of data" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\PHPunk\Util\collectible</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="PHPunk" line="95" package="phpunk\util">
        <name>loadArray</name>
        <full_name>\PHPunk\Util\collectible::loadArray()</full_name>
        <docblock line="95">
          <description>Replaces internal data collection.</description>
          <long-description></long-description>
          <tag name="param" line="95" description="&lt;p&gt;OPTIONAL Any array or traversable object&lt;/p&gt;" type="mixed" variable="$data">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\PHPunk\Util\collectible</inherited_from>
      </method>
      <property final="false" static="false" visibility="public" line="17">
        <name>$code</name>
        <default/>
        <docblock>
          <description>Machine-readable error code</description>
          <long-description/>
          <tag name="var" description="&lt;p&gt;Machine-readable error code&lt;/p&gt;" type="string" line="17">
            <type by_reference="false">string</type>
          </tag>
          <tag name="magic" line="17"/>
          <tag name="property" line="17" description="Machine-readable error code" type="string" variable="$code">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="17">
        <name>$message</name>
        <default/>
        <docblock>
          <description>Human-readable error message</description>
          <long-description/>
          <tag name="var" description="&lt;p&gt;Human-readable error message&lt;/p&gt;" type="string" line="17">
            <type by_reference="false">string</type>
          </tag>
          <tag name="magic" line="17"/>
          <tag name="property" line="17" description="Human-readable error message" type="string" variable="$message">
            <type>string</type>
          </tag>
        </docblock>
      </property>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="17" code="PPC:ERR-50005">No summary for class \PHPunk\api_error</error>
    </parse_markers>
    <source>eJydklFv2jAUhZ/jX3FVIRUQFe/b6FbtpZu2FWnbU1uhS3JJXBw7sh06VvHfd+2EkDGQqvHGPT7xd871u/dVUYnpeCxgDB8qTNeYE/Cs1mseTYXQWJJjgWB+O+fpWyFqR/DZGf2drEQlf+NSUTtuzjz89FI9pEYpSr2M6jnRaHZ291tTkfVbcN5KncMgNRnBV0wLqenKEmbhKiBrjYWgnXYxsAsxbusS9bGtFWO4VKFzgJVcNJosK0Ulae/gwDf5Jyu8iCTk+SugSEKKJADJXBtLILUnq1HBBtnLh4I6FUll5QY9wWARIvyfs03RN3/koJ44Dmh6bsOa5RMDwrP0BfiCIJcb0rE5QJ11XbC9ub9Ci+Xr2z/heVX3PV8pf1EGgww9wt38x6e7bzdfAK3FLbDBW9yQdfETbRazAswyGTbDBQXfvpx6qWQKq1rHtcGC69WMVad+GKNMOrpJe+EM7h9HYZvJwBfSXV3HjfB40GzmMN/HmnXf6KnKYHYTkIfxsyOWdie2WmLOfCX5wmRnmXNi2jVtGyzHm0sL6E2SFPnlXQa+yzeH/y1UM0os+dpqaPFeLhbBf7ELyLvTbN3Lx8ix4u6PX/0Z5KfeMRo2kO399wGmQQX+za6hX/MkqnvwvrrfUjwQGj2ye9O0PeIDj7HsnfgDP+uDIA==</source>
  </file>
  <file path="database/schema.php" generated-path="database.schema.html" hash="e4c2ac1efbc3ccf9631e54d200931714" package="phpunk\database">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="phpunk\database"/>
    </docblock>
    <class final="false" abstract="false" namespace="PHPunk\Database" line="11" package="phpunk\database">
      <extends/>
      <name>schema</name>
      <full_name>\PHPunk\Database\schema</full_name>
      <docblock line="11">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="11" description="phpunk\database"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="30" package="phpunk\database">
        <name>__construct</name>
        <full_name>\PHPunk\Database\schema::__construct()</full_name>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="30" description="&lt;p&gt;A previously-established MySQLi instance&lt;/p&gt;" type="object" variable="$mysql">
            <type>object</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$mysql</name>
          <default></default>
          <type>object</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="53" package="phpunk\database">
        <name>query</name>
        <full_name>\PHPunk\Database\schema::query()</full_name>
        <docblock line="53">
          <description>Executes a parameterized SELECT query.</description>
          <long-description></long-description>
          <tag name="param" line="53" description="&lt;p&gt;A standard SQL query string&lt;/p&gt;" type="string" variable="$sql">
            <type>string</type>
          </tag>
          <tag name="param" line="53" description="&lt;p&gt;OPTIONAL Index-based query parameters&lt;/p&gt;" type="array" variable="$params">
            <type>array</type>
          </tag>
          <tag name="param" line="53" description="&lt;p&gt;OPTIONAL Table name to be passed on to result&lt;/p&gt;" type="string" variable="$table_name">
            <type>string</type>
          </tag>
          <tag name="return" line="53" description="Database result object, FALSE on failure" type="object">
            <type>object</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$sql</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$params</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$table_name</name>
          <default>false</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="112" package="phpunk\database">
        <name>execute</name>
        <full_name>\PHPunk\Database\schema::execute()</full_name>
        <docblock line="112">
          <description>Executes a parameterized INSERT, UPDATE, or DELETE query.</description>
          <long-description></long-description>
          <tag name="param" line="112" description="&lt;p&gt;A standard SQL query string&lt;/p&gt;" type="string" variable="$sql">
            <type>string</type>
          </tag>
          <tag name="param" line="112" description="&lt;p&gt;OPTIONAL Index-based query parameters&lt;/p&gt;" type="array" variable="$params">
            <type>array</type>
          </tag>
          <tag name="return" line="112" description="TRUE on sucess, FALSE on failure" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$sql</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$params</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="157" package="phpunk\database">
        <name>table_exists</name>
        <full_name>\PHPunk\Database\schema::table_exists()</full_name>
        <docblock line="157">
          <description>Returns whether a table with the given name has been defined in the database schema.</description>
          <long-description></long-description>
          <tag name="param" line="157" description="&lt;p&gt;The name of the database table&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="157" description="TRUE if the table name is defined, or FALSE otherwise" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="166" package="phpunk\database">
        <name>get_table</name>
        <full_name>\PHPunk\Database\schema::get_table()</full_name>
        <docblock line="166">
          <description>Returns the database table object with the given name.</description>
          <long-description></long-description>
          <tag name="param" line="166" description="&lt;p&gt;The name of the database table&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="166" description="Table object if the table name is defined, or FALSE otherwise" type="object">
            <type>object</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="177" package="phpunk\database">
        <name>add_table</name>
        <full_name>\PHPunk\Database\schema::add_table()</full_name>
        <docblock line="177">
          <description>Defines a database table name in schema. If the table name already exists
in the schema, this method will merely return the defined table object.</description>
          <long-description></long-description>
          <tag name="param" line="177" description="&lt;p&gt;Table name&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="177" description="&lt;p&gt;OPTIONAL Primary key field, defaults to 'id'&lt;/p&gt;" type="string" variable="$pkey">
            <type>string</type>
          </tag>
          <tag name="return" line="177" description="Newly-defined table object" type="object">
            <type>object</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$pkey</name>
          <default>'id'</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="191" package="phpunk\database">
        <name>remove_table</name>
        <full_name>\PHPunk\Database\schema::remove_table()</full_name>
        <docblock line="191">
          <description>Removes a database table definition from the schema.</description>
          <long-description></long-description>
          <tag name="param" line="191" description="&lt;p&gt;Table name&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="198" package="phpunk\database">
        <name>clear_tables</name>
        <full_name>\PHPunk\Database\schema::clear_tables()</full_name>
        <docblock line="198">
          <description>Removes all database table definitions from schema.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="208" package="phpunk\database">
        <name>relation_exists</name>
        <full_name>\PHPunk\Database\schema::relation_exists()</full_name>
        <docblock line="208">
          <description>Returns whether a foreign-key relationship with the given name has been
defined in the database schema.</description>
          <long-description></long-description>
          <tag name="param" line="208" description="&lt;p&gt;The name of the relationship&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="208" description="TRUE if the relationship is defined, FALSE otherwise" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="217" package="phpunk\database">
        <name>get_relation</name>
        <full_name>\PHPunk\Database\schema::get_relation()</full_name>
        <docblock line="217">
          <description>Returns the foreign-key relationship object with the given name.</description>
          <long-description></long-description>
          <tag name="param" line="217" description="&lt;p&gt;The name of the relationship&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="217" description="Relation object if the relationship is defined, FALSE otherwise" type="object">
            <type>object</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="230" package="phpunk\database">
        <name>add_relation</name>
        <full_name>\PHPunk\Database\schema::add_relation()</full_name>
        <docblock line="230">
          <description>Defines a relationship in the schema. If the relationship already exists
in the schema, this method will merely return the defined relation object.</description>
          <long-description></long-description>
          <tag name="param" line="230" description="&lt;p&gt;Relationship name&lt;/p&gt;" type="string" variable="$rel_name">
            <type>string</type>
          </tag>
          <tag name="param" line="230" description="&lt;p&gt;Name of table containing primary key&lt;/p&gt;" type="string" variable="$ptable_name">
            <type>string</type>
          </tag>
          <tag name="param" line="230" description="&lt;p&gt;Name of table containing foreign key&lt;/p&gt;" type="string" variable="$ftable_name">
            <type>string</type>
          </tag>
          <tag name="param" line="230" description="&lt;p&gt;Name of foreign key field&lt;/p&gt;" type="string" variable="$fkey">
            <type>string</type>
          </tag>
          <tag name="return" line="230" description="Newly-defined relation object" type="object">
            <type>object</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rel_name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$ptable_name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$ftable_name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$fkey</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="250" package="phpunk\database">
        <name>remove_relation</name>
        <full_name>\PHPunk\Database\schema::remove_relation()</full_name>
        <docblock line="250">
          <description>Removes a relationship definition from the schema.</description>
          <long-description></long-description>
          <tag name="param" line="250" description="&lt;p&gt;Relationship name&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="265" package="phpunk\database">
        <name>clear_relations</name>
        <full_name>\PHPunk\Database\schema::clear_relations()</full_name>
        <docblock line="265">
          <description>Removes all database relationship definitions from schema.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="282" package="phpunk\database">
        <name>get_record</name>
        <full_name>\PHPunk\Database\schema::get_record()</full_name>
        <docblock line="282">
          <description>Return database record by unique identifier. If the relationship argument
is used, the identifier will be interpreted as the foreign record's
primary key. Otherwise, the identifier will be interpreted as the record's
own primary key.</description>
          <long-description></long-description>
          <tag name="param" line="282" description="&lt;p&gt;Table name&lt;/p&gt;" type="string" variable="$table_name">
            <type>string</type>
          </tag>
          <tag name="param" line="282" description="&lt;p&gt;Unique identifier for database record&lt;/p&gt;" type="mixed" variable="$record_id">
            <type>mixed</type>
          </tag>
          <tag name="param" line="282" description="&lt;p&gt;OPTIONAL Relationship name&lt;/p&gt;" type="string" variable="$rel_name">
            <type>string</type>
          </tag>
          <tag name="return" line="282" description="Record identified by parameter, NULL on failure" type="object">
            <type>object</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table_name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$record_id</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$rel_name</name>
          <default>false</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="301" package="phpunk\database">
        <name>put_record</name>
        <full_name>\PHPunk\Database\schema::put_record()</full_name>
        <docblock line="301">
          <description>Inserts or updates a database record and returns the record's primary key.</description>
          <long-description></long-description>
          <tag name="param" line="301" description="&lt;p&gt;Table name&lt;/p&gt;" type="string" variable="$table_name">
            <type>string</type>
          </tag>
          <tag name="param" line="301" description="&lt;p&gt;Key-value data for database record&lt;/p&gt;" type="mixed" variable="$record">
            <type>mixed</type>
          </tag>
          <tag name="return" line="301" description="Record's primary key" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table_name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$record</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="330" package="phpunk\database">
        <name>remove_record</name>
        <full_name>\PHPunk\Database\schema::remove_record()</full_name>
        <docblock line="330">
          <description>Deletes a database record by primary key.</description>
          <long-description></long-description>
          <tag name="param" line="330" description="&lt;p&gt;Table name&lt;/p&gt;" type="string" variable="$table_name">
            <type>string</type>
          </tag>
          <tag name="param" line="330" description="&lt;p&gt;Record's primary key&lt;/p&gt;" type="mixed" variable="$record_id">
            <type>mixed</type>
          </tag>
          <tag name="return" line="330" description="TRUE on success, False on failure" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table_name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$record_id</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <property final="false" static="false" visibility="public" line="11">
        <name>$insert_id</name>
        <default/>
        <docblock>
          <description>Most recent auto-generated unique ID from MySQL</description>
          <long-description/>
          <tag name="var" description="&lt;p&gt;Most recent auto-generated unique ID from MySQL&lt;/p&gt;" type="mixed" line="11">
            <type by_reference="false">mixed</type>
          </tag>
          <tag name="magic" line="11"/>
          <tag name="property" line="11" description="Most recent auto-generated unique ID from MySQL" type="mixed" variable="$insert_id">
            <type>mixed</type>
          </tag>
        </docblock>
      </property>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="11" code="PPC:ERR-50005">No summary for class \PHPunk\Database\schema</error>
      <error line="30" code="PPC:ERR-50008">No summary for method __construct()</error>
    </parse_markers>
    <source>eJztWl9z2zYSf5Y+BTrjiahEStrXOHbqqd07T13bkeXpQ87DgUhIQkORKkDaUTv57l1gFxQgkbLs88299KW1iMX+398Ci3z4uJwvu+9ev+6y1+zHJU++8Jlg8K3Kv/wn5SWfcC1g7V23m/OF0EAh2PW/r83yKS0fdtcMVLEUqlyxhfwqUnYgcw0/Y5myXwtdMiUSkZeMV2UxnIlcKF4CVZXLPyrBzk/ZVBUL9uvq5tOFFZlkXGumk7lYcPZXt2OkdIwYOcsLJZjMS6FynrF7riSfZMKsvut2lkreA2d2EC9W+o+MHbG8yjJQ8xkcSvNVAwuuFF9F/edxUSJr47Hkii9YMfldJCU7QIVP2FKJe1lUOlsNhTY6SD0HV1nfSBAI3/KkllPBesKmVZ6UsshZHCcFUKgqKSPk2Dfu6xyUc6mHx7VXcO2w2/nWYNSCz4DnQpTzIm2VMxMg4YtYIX/9IMtkzrwvnQTyg/XqNOi9Nx87SpSVylmgz/C4pjo0RKmY8iormzaAVIwLSjLk30Ijzr6KpCohbpxZ/woIkPwTHHhzdnH205hBvqnVWz8A4C6Zz9gBut+4N+UK6D9dIDER+FtsNNmB/aHZ1fX4/Ory5IKd56n4OjSFkdLWWgXdJNFaEpvqWvMYm2/MfisLNoGKhEoAfuB0+K2EBs8gL/IM5Y8rSSKhzwP288nFzZnZPeUyq1Rb4lh1I+ODQW1XnbWDQNUjYJVpgWGWUwi6LhelSaowqJDIwEhYpn1KCkMudawTnnEVkaB+30Z6Q2ysQUERGQ1NssVczbRR5QdbRMgqKaq8XLNBGZ2DeMOAXo/2dKaFAn0lrHwPRuXw/5DFIQAX+wAr5o83bxzHmuVnWH7DfrhjR6+cm+DTHXF35sk1R7NK9nlcvr9jb4+gOHqHuAIYIWjvNCv4frtTf3cLjSaab6igkfEd+D6LKyi42PoWXYT/tZEcsN5E5ily6pngx0GcOpC9sxlsF0oVCvcMj+2PATuLb2/ORvFvJ6PL88t/2QIl4XWmAC3WaNRnr8CNlLCQP7hqgo3fonVIoX8UKg2Q1H6fQvhSE04KwcNcQvlERG+YIqvh8VQAQsVQTEUSOUsc2893plOIB4a/3fYg710KrRkqISL31Vq3tiSsBCyuHiHQz1e3l6fx6Oq3m6jfqy10HJrVVsVDtE4EZzTk2T3P3C6IudNmW0kvCQg30FzrZucGsNey3rTb7GUmy0hXG+s4K2ZY28j9eVlBdElWaNLTl7TBM/RqO2/Lmsy0WHW4Z484vwRW4wG7vT49GZ8NGKDFKQRtfPZ/bhtky6QoMsFzNh7dWkjXVSK03hvjXdm1oDydFOokJs/9A/L/gPz+5UzZYWHEoJYOEgl1i7Ygv24IJP1JwptgpOudHFHY/wBa1px9cBnZRc0e5nCAFgowxmIpgxPynMEXNpP3IscT3pxrOOLBLzjyyhzKX+aWxF2/6AbUiDuWwXhOZ8ViGm4s3WWkGTwkkpfrw6bUTgkLewQpxoIHqdsQBbuE+Cp1qSOrERYTiZRwci1r3+J96rMlM52q0WvbRrgDboP/XsQvxH7sy3oh93i3lS3f/Njolg2vnFqRpk9t+AR1yl1+sPMthXmmBE9XDINjuVFy4Z4BM/LplgfOzTL4Gy6rK0YKWrdRWvqB2OH0WnoTyRIubOued63kgkOnMx+nUmTgVrr2aXPP6cGFsSlKl+IB7sVNarWEgKepH4IB6XFkJayvMN/tSlVqEI2L5hSmYzNkiCxnxK+P9nQ1UTKdiQbxSPTeEjWsbuHMHpkyEovivilTrK+k9YWdsawzYN9ANnhVWWnbuV3lTyh4UhgSr1VljTp7+jYokwCsKRIWheOO7RHOI1ANRwchZ/nQ5AgUA7dKzOVyJ3pbXi+F4L7UR/E7UNGHqP3wyW3fF8HNLGsP/G514ksgeat/iPmI1jeg/L/0FN5JkcUuMPc81ArloSo+Jtc4HpC8KJKr0D2NfgcanPSMfDVacd0bDV26QNk6Toq85FDJQLVcw30Tj+k+PCitWnmYdHObPVpsL483kw3P7Ogn60RwnhoEbhgEBg1QNa/XULJsVZ/j5t+jImJs7yIbuOqJvDOjFNtVIpLdtGHqb/BGK1k9/Wg1rLbJmeOmIbg8PG51DPxZD2v2o0XioKIcDd7J4BfdORobZVistVdbO2ZQbc/pl4110t42m4CEpj+ZHzYfbjFYYX8N4biesbUnDGyAG7v9ddcPw9esmse1Pass12nAdfoI162pfeNpoCUuTzgU1Bw2zgXbjzJmaCC4fcIIzw7Q41/hNKyPh0C0bIt/Yz/0bbGDvcnKvXnJVOSlBGxSLaivZtUCSBDvNYO7fDqwZOudCPYTeoZaQhUAjvGgCZPgHvYND4bfsivX857CNmBXPOQBy0feOJrvB/ReiIzNe+HtpoOMLZue3Nm36ltGSwPbPDHY0NTybJTqCdyAXd5eXDw+XEPQwelxAP61YQNPw+03FCqv7XthAPJ4EaE3PEpFLTIwI4aPAdh1t6dtUTgwBp36folvjq8b3oTCyXA/eKGrR85S6XLzDoPPsEGJnNtHP22u09USwhveXqhgeJ7SMSbMvxfOO/aLWA3BNRWe3NszjszBzaMGZVrSY1ntTI/nJQJNEzGPXVTdoLV+SsCDoXfKwKeNXlmcmKTo0cDvo9NleEwrEa28t8mNUuJ7rmomLVmG7Z7+BYC1hB4oXMaaWy508vrVxtqN5KR8mOH0PEwZTi8zbpjb9YejGxsxr9o2epf6xtF4OEdsseLje1cuwSP2Y08Qp1C0zRlvwOfFMbUtU3c9LdDbglH+cfirO/0uBHwRuEut52xMn4py4TGxLeZtwfvW/RuOVAfv</source>
  </file>
  <file path="token.php" generated-path="token.html" hash="5261766ab3b7d89c1b832d24e9a07047" package="phpunk">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="phpunk"/>
    </docblock>
    <constant namespace="" line="8" package="phpunk">
      <name>HASH_ALGO_MD5</name>
      <full_name>\HASH_ALGO_MD5</full_name>
      <value>'md5'</value>
      <docblock line="8">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="8" description="phpunk"/>
      </docblock>
    </constant>
    <constant namespace="" line="9" package="phpunk">
      <name>HASH_ALGO_SHA1</name>
      <full_name>\HASH_ALGO_SHA1</full_name>
      <value>'sha1'</value>
      <docblock line="9">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="9" description="phpunk"/>
      </docblock>
    </constant>
    <constant namespace="" line="10" package="phpunk">
      <name>HASH_ALGO_DEFAULT</name>
      <full_name>\HASH_ALGO_DEFAULT</full_name>
      <value>HASH_ALGO_MD5</value>
      <docblock line="10">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="10" description="phpunk"/>
      </docblock>
    </constant>
    <function namespace="PHPunk" line="18" package="phpunk">
      <name>create_nonce</name>
      <full_name>\PHPunk\create_nonce()</full_name>
      <docblock line="18">
        <description>Generates a random string of $length bytes.</description>
        <long-description></long-description>
        <tag name="package" line="18" description="phpunk"/>
        <tag name="param" line="18" description="&lt;p&gt;The length, in bytes, for the generated string&lt;/p&gt;" type="integer" variable="$length">
          <type>integer</type>
        </tag>
        <tag name="return" line="18" description="The randomly generated string" type="string">
          <type>string</type>
        </tag>
      </docblock>
      <argument line="0" by_reference="false">
        <name>$length</name>
        <default></default>
        <type>integer</type>
      </argument>
    </function>
    <function namespace="PHPunk" line="30" package="phpunk">
      <name>create_token</name>
      <full_name>\PHPunk\create_token()</full_name>
      <docblock line="30">
        <description>Hashes the input data and creates a signed token with the provided key.</description>
        <long-description></long-description>
        <tag name="package" line="30" description="phpunk"/>
        <tag name="param" line="30" description="&lt;p&gt;The data to be hashed&lt;/p&gt;" type="string" variable="$data">
          <type>string</type>
        </tag>
        <tag name="param" line="30" description="&lt;p&gt;The secret key to be used for signing the token&lt;/p&gt;" type="string" variable="$key">
          <type>string</type>
        </tag>
        <tag name="param" line="30" description="&lt;p&gt;OPTIONAL The algorithm to use for hashing the input data&lt;/p&gt;" type="string" variable="$algo">
          <type>string</type>
        </tag>
        <tag name="return" line="30" description="The signed token" type="string">
          <type>string</type>
        </tag>
      </docblock>
      <argument line="0" by_reference="false">
        <name>$data</name>
        <default></default>
        <type>string</type>
      </argument>
      <argument line="0" by_reference="false">
        <name>$key</name>
        <default></default>
        <type>string</type>
      </argument>
      <argument line="0" by_reference="false">
        <name>$algo</name>
        <default>HASH_ALGO_DEFAULT</default>
        <type>string</type>
      </argument>
    </function>
    <function namespace="PHPunk" line="49" package="phpunk">
      <name>verify_token</name>
      <full_name>\PHPunk\verify_token()</full_name>
      <docblock line="49">
        <description>Verifies that a signed token is valid.</description>
        <long-description></long-description>
        <tag name="package" line="49" description="phpunk"/>
        <tag name="param" line="49" description="&lt;p&gt;the signed token&lt;/p&gt;" type="string" variable="$token">
          <type>string</type>
        </tag>
        <tag name="param" line="49" description="&lt;p&gt;The data to be hashed&lt;/p&gt;" type="string" variable="$data">
          <type>string</type>
        </tag>
        <tag name="param" line="49" description="&lt;p&gt;The secret key to be used for signing the token&lt;/p&gt;" type="string" variable="$key">
          <type>string</type>
        </tag>
        <tag name="param" line="49" description="&lt;p&gt;OPTIONAL The algorithm to use for hashing the input data&lt;/p&gt;" type="string" variable="$algo">
          <type>string</type>
        </tag>
        <tag name="return" line="49" description="Whether the signed token is valid for the input data" type="boolean">
          <type>boolean</type>
        </tag>
      </docblock>
      <argument line="0" by_reference="false">
        <name>$token</name>
        <default></default>
        <type>string</type>
      </argument>
      <argument line="0" by_reference="false">
        <name>$data</name>
        <default></default>
        <type>string</type>
      </argument>
      <argument line="0" by_reference="false">
        <name>$key</name>
        <default></default>
        <type>string</type>
      </argument>
      <argument line="0" by_reference="false">
        <name>$algo</name>
        <default>HASH_ALGO_DEFAULT</default>
        <type>string</type>
      </argument>
    </function>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJzdVE1r20AQPVu/YgIBy0bEJJCTa1pD2rjg1oa47VGsrZG0WFqJ3ZVbU/rfM/shxYmVkkNPPXm98+bNe7MPvXtf53UwGY8DGMOHmu32LEOgu0bs6WoSBIKVqKiAsF6s6XYaBAmmXGA4XMwfFvF8eb+Kv9zdDiMYlsntcDTtqT8s5tcGoHJ23Y+4+/hp/m25IdAzVsK26u5RoGQaFTCQTCRVCUpLLjKoUrgsUGQ6h+2RAFcE934kK4ELjRnKDrPJEdwxoppriSCtJGiqZH5M4tktkUTdSNHOMwROQXHsw0+CtBE7zSsBO4lUi0Uldhh6ASP4HQw845aLmxx/hY4utlo6HJn/09lfMJWTdyORi7rRkDDNgNr8DLMWxTNBQnS1RwE/OXk18FpWB57Q/R6PL1bjDV1aLmPLHnQFW4TcDEx6wERjsQppsjasvqNRNMTs0egwUDPdiulhYUVWwWq9+bz6Ol9aPnMjSXRp6IjLUhkVLdWT71ce5dR/7zvYSmjtRtZI5IXM4CyK9pnazMzMGDqHRk9oeyjO5g8lVssGzWMRXLFCE7j32adUNx1UP2WxalyxZDtfjM25Q9iuK7DsTred5hfg+nz5NDLfUfKU29Aw/TIeXMGBFTx5JREOpM+X+j9FZ1tVBTIBP3IkkDyz2y2p+zo84znJ18Gs+tjmy/74l/1nOXMJ4ymEHuLGjOBi1n3axnAzCgZtMFJWKLSx/EvsgkHBlQ5tiCKXoZGTEau64PrJTRfjLnlvSirMZi6iJpqPLWgR7g==</source>
  </file>
  <file path="component/user.php" generated-path="component.user.html" hash="0635d850493064b3a9bd4d42dd51e0cc" package="phpunk\component">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="phpunk\component"/>
    </docblock>
    <namespace-alias name="create_token">\PHPunk\create_token</namespace-alias>
    <namespace-alias name="verify_token">\PHPunk\verify_token</namespace-alias>
    <class final="false" abstract="false" namespace="PHPunk\Component" line="15" package="phpunk\component">
      <extends/>
      <name>user</name>
      <full_name>\PHPunk\Component\user</full_name>
      <docblock line="15">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="15" description="phpunk\component"/>
      </docblock>
      <property static="false" visibility="protected" namespace="PHPunk\Component" line="16" package="phpunk\component">
        <name>$_public_name</name>
        <full_name>\PHPunk\Component\user::_public_name</full_name>
        <default></default>
        <docblock line="16">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="PHPunk\Component" line="17" package="phpunk\component">
        <name>$_private_key</name>
        <full_name>\PHPunk\Component\user::_private_key</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Component" line="23" package="phpunk\component">
        <name>__construct</name>
        <full_name>\PHPunk\Component\user::__construct()</full_name>
        <docblock line="23">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="23" description="&lt;p&gt;Public identifier for user&lt;/p&gt;" type="string" variable="$public_name">
            <type>string</type>
          </tag>
          <tag name="param" line="23" description="&lt;p&gt;Private credential for user&lt;/p&gt;" type="string" variable="$private_key">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$public_name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$private_key</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Component" line="41" package="phpunk\component">
        <name>create_token</name>
        <full_name>\PHPunk\Component\user::create_token()</full_name>
        <docblock line="41">
          <description>Generates a random cryptographically-secure token for user.</description>
          <long-description></long-description>
          <tag name="param" line="41" description="&lt;p&gt;OPTIONAL Hashing algorithm, defaults to MD5&lt;/p&gt;" type="string" variable="$algo">
            <type>string</type>
          </tag>
          <tag name="return" line="41" description="Cryptographically-secure token" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$algo</name>
          <default>'md5'</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Component" line="51" package="phpunk\component">
        <name>verify_token</name>
        <full_name>\PHPunk\Component\user::verify_token()</full_name>
        <docblock line="51">
          <description>Validates a cryptographically-secure token for user.</description>
          <long-description></long-description>
          <tag name="param" line="51" description="&lt;p&gt;Cryptographically-secure token&lt;/p&gt;" type="string" variable="$token">
            <type>string</type>
          </tag>
          <tag name="param" line="51" description="&lt;p&gt;OPTIONAL Hashing algorithm, defaults to MD5&lt;/p&gt;" type="string" variable="$algo">
            <type>string</type>
          </tag>
          <tag name="return" line="51" description="TRUE if token is valid, FALSE otherwise" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$token</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$algo</name>
          <default>'md5'</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Component" line="62" package="phpunk\component">
        <name>create_action_token</name>
        <full_name>\PHPunk\Component\user::create_action_token()</full_name>
        <docblock line="62">
          <description>Generates a random cryptographically-secure token for user and action.</description>
          <long-description></long-description>
          <tag name="param" line="62" description="&lt;p&gt;Name of API action&lt;/p&gt;" type="string" variable="$action">
            <type>string</type>
          </tag>
          <tag name="param" line="62" description="&lt;p&gt;OPTIONAL Name of resource&lt;/p&gt;" type="string" variable="$resource">
            <type>string</type>
          </tag>
          <tag name="param" line="62" description="&lt;p&gt;OPTIONAL Hashing algorithm, defaults to  MD5&lt;/p&gt;" type="string" variable="$algo">
            <type>string</type>
          </tag>
          <tag name="return" line="62" description="Cryptographically-secure token" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$action</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$resource</name>
          <default>false</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$algo</name>
          <default>'md5'</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Component" line="75" package="phpunk\component">
        <name>verify_action_token</name>
        <full_name>\PHPunk\Component\user::verify_action_token()</full_name>
        <docblock line="75">
          <description>Validates a random cryptographically-secure token for user and action.</description>
          <long-description></long-description>
          <tag name="param" line="75" description="&lt;p&gt;Cryptographically-secure token&lt;/p&gt;" type="string" variable="$token">
            <type>string</type>
          </tag>
          <tag name="param" line="75" description="&lt;p&gt;Name of API action&lt;/p&gt;" type="string" variable="$action">
            <type>string</type>
          </tag>
          <tag name="param" line="75" description="&lt;p&gt;OPTIONAL Name of resource&lt;/p&gt;" type="string" variable="$resource">
            <type>string</type>
          </tag>
          <tag name="param" line="75" description="&lt;p&gt;OPTIONAL Hashing algorithm, defaults to  MD5&lt;/p&gt;" type="string" variable="$algo">
            <type>string</type>
          </tag>
          <tag name="return" line="75" description="TRUE if token is valid, FALSE otherwise" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$token</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$action</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$resource</name>
          <default>false</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$algo</name>
          <default>'md5'</default>
          <type>string</type>
        </argument>
      </method>
      <property final="false" static="false" visibility="public" line="15">
        <name>$public_name</name>
        <default/>
        <docblock>
          <description>Public identifier for user, typically a username</description>
          <long-description/>
          <tag name="var" description="&lt;p&gt;Public identifier for user, typically a username&lt;/p&gt;" type="string" line="15">
            <type by_reference="false">string</type>
          </tag>
          <tag name="magic" line="15"/>
          <tag name="property" line="15" description="Public identifier for user, typically a username" type="string" variable="$public_name">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="15">
        <name>$private_key</name>
        <default/>
        <docblock>
          <description>Private credential for user, typically a password</description>
          <long-description/>
          <tag name="var" description="&lt;p&gt;Private credential for user, typically a password&lt;/p&gt;" type="string" line="15">
            <type by_reference="false">string</type>
          </tag>
          <tag name="magic" line="15"/>
          <tag name="property" line="15" description="Private credential for user, typically a password" type="string" variable="$private_key">
            <type>string</type>
          </tag>
        </docblock>
      </property>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="15" code="PPC:ERR-50005">No summary for class \PHPunk\Component\user</error>
      <error line="23" code="PPC:ERR-50008">No summary for method __construct()</error>
      <error line="16" code="PPC:ERR-50007">No summary for property $_public_name</error>
      <error line="17" code="PPC:ERR-50007">No summary for property $_private_key</error>
    </parse_markers>
    <source>eJzNVVFvmzAQfg6/4hRFahLR5akvy7It6rq1UtdGW7enSZELB1gBG9kmFary32djQiCCrUuyaW9w9/n8fd/dwZt3aZQ6k/HYgTG8T4m3IiGCjmVs9cPjScoZMqWTE8dhJEGpIQiL64XJX27zU8fJJEKQMU9RzrZ5TyBRuFR8hWzailijoEG+Rex4CJ6iUDlIJSgLYZBmjzH1loYBLIpnoL6+mAYUBQRcgK4uXFB5Sj0SxzmQImIOdFQUdG3IrTCHhX0GzbcoSuKOkimR8okLv/DDi/VbAYJnp6cvUOgp9GGwrLGd7mV2t2q5PaO3Z40XJPlDta0nX6bKHJ1oZrZ21ZTl0uNMl8o8NayTcBuFR0Zub6AiKs/f1rXCrEF9WkfVeM0a1TRqU3eChowLhISEmlmCKuJ+J9sQNc+KEQ1gSKU0MXvrc39psv3NaKTTPYEqEwz2k3sEPiFDoblJ3W5BmM8TbWCeKh4KkkZ2Es4lepkmWYxtZeqrtoaQOORwv3i4ub+b38I1kZEJm6igKkpc8DEgWaykLgafP1zYGiXVssjlL+/vcKe+e0NLYwZniX9xZt0qr2jCrDXNzpexXcdcq2q0Z9x3ElO/NO4Yxyzk95pP6vQj5zESBg9fvl2BHiRLgkpYG1UufJzffr0CriIUT1Rih+f1r9nQCinNavW+HX5MDw4fXtBoIIWM9jm2Cu/MmvMA5oubEt0GFih5JvR/omrH9tw2c3QD/8auWEHVyhRvbk3NDAISS2xtqfn4VMhR5dcM+lX0dRnsT7vWr7rykJ07bb8P3sL/fU5OuunNiakW/l9MTse35mUTtHF+AhMmVhM=</source>
  </file>
  <file path="database/query.php" generated-path="database.query.html" hash="edcb3965879fa3b728d50083a52d3f95" package="phpunk\database">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="phpunk\database"/>
    </docblock>
    <namespace-alias name="object">\PHPunk\Util\object</namespace-alias>
    <class final="false" abstract="false" namespace="PHPunk\Database" line="10" package="phpunk\database">
      <extends/>
      <name>query</name>
      <full_name>\PHPunk\Database\query</full_name>
      <docblock line="10">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="10" description="phpunk\database"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="77" package="phpunk\database">
        <name>__construct</name>
        <full_name>\PHPunk\Database\query::__construct()</full_name>
        <docblock line="77">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="77" description="&lt;p&gt;Database schema for connection&lt;/p&gt;" type="object" variable="$database">
            <type>object</type>
          </tag>
          <tag name="param" line="77" description="&lt;p&gt;Array or iterable object or field values&lt;/p&gt;" type="mixed" variable="$args">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$database</name>
          <default></default>
          <type>object</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$args</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="112" package="phpunk\database">
        <name>get_result</name>
        <full_name>\PHPunk\Database\query::get_result()</full_name>
        <docblock line="112">
          <description>Returns a result for this database query</description>
          <long-description></long-description>
          <tag name="return" line="112" description="A database result instance" type="object">
            <type>object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="126" package="phpunk\database">
        <name>execute</name>
        <full_name>\PHPunk\Database\query::execute()</full_name>
        <docblock line="126">
          <description>Executes the SELECT query</description>
          <long-description></long-description>
          <tag name="return" line="126" description="TRUE is query succeeds, FALSE otherwise" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="233" package="phpunk\database">
        <name>reset</name>
        <full_name>\PHPunk\Database\query::reset()</full_name>
        <docblock line="233">
          <description>Disposes of the cached database result</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="10" code="PPC:ERR-50005">No summary for class \PHPunk\Database\query</error>
      <error line="77" code="PPC:ERR-50008">No summary for method __construct()</error>
    </parse_markers>
    <source>eJzdV21P40YQ/mz/imlkXRIUOD5DE0oh6Ki45BpAp6pXhY2zDj4c2/Xax6ET/72zO7vrtUm4NpX6oRICPLPz9szLzv54kt/n/tu9PR/24KechQ9sxQFpVfrwaclKtmCCI++t76dszQWe4PDh3QfJPtfsY9+vhKXelnHyKVt85mGJjDBhQsCfFS+e4JvvSUOetBSv0qzgEKclL1KWwBdWxGyRcMl963t5EX9hJQdRsjIOIZgvecSqpBQwBFYU7Knne163lBJdgOEIut2BpCyKeLlCUk1hxUrgEUkhwb4ii6woN5CTeB2XpPFQEbIoErxUCg99r48R/eMY0PkaqB2kVZS7iRIcu8lK4CzaOwYuUf63OlRKUMnhbuKUwN3lVenuJpqzgq3FbrIFF1juDVmlDqizIDA1BaYLQYT3fM0gygoIszTFU3GWuqLr+CtfQqASeypTAng0Rk+kB0YxkqKYJ0t0Lam4MI5ViwT7MKpSpRXmczQhyqIKy551ZUC6+7LRvaC8j8X+yNY+ZiBw+8ALdIGl/FHb7qk6ma95seI9wZPo6KhufKO8T8Jau+oNkLolc3+ke6U+QB1QHzAdUZ9Qbjgq5G+Xr2rY4ctvl0/1WfPVt3vAVqA+QN944nlDZazZCnFe8/I+W27FfsUR9Qf+REiLx7gM78GheKEEXI/Ho5qgp6NDUdPR+VZj0fmmeegQ9Dx0KKpBXAKVvUuhYiaKV/CyKlLQ6HzrzKXfnWeJ2HMTk5k6KYABKVClLcXAFpUyTgBqvbqMT+szWjjGemVpyLegipjqpusRiHEEvR9iMU+rJOmZXNKJft9/EYjTsUpUk/lXHlYl731PRHOksVZljEmDwMg5XI+vxmc3G8JeZFnCWQo3s9sxxObGFVUYcr7E5rk4vboeQ4Y6isdYbAPBemsRCKjDhtDu5/2RRExxTazqo69LMCAPhtDRPl//ejU/O706m19Mbyfn89n04zXckfr9kdwt7g72OgoLL/icYbbci0MSH9F33iZmxZIXzSsGqVSCbbKKp+CJiobsUtYTJqM3YVCXmDi8oB4hjrMwxG+U3B/lhNCJ/ozo86jBPX6h6RUwtX3y2eB4gEAOEC9itgHTiP3+h8S7dQimE5RzfLs7MJ/YeHcocee6arm55HaU58/AE2ykNh5yctOHdr3bpaw8+37Tc7iYTd+3sq1dx57mTI0vwkSNYyYgoFsI965A3UQmHd9NopKz2fOCNZPTUeGyOwikq26IzUVgjXpB9Lf6xnHI5LudS9dnmUqKh/KiDBFM0GlHF2lHZQjmeCORFM+hCqIB8atqLWjWhZbSTf7nW/1/YWlDAmpLvvOHzLrlYMr+v60Ht9leKYgdk9rs97q1/7dZ9W2X490rQpawoqcDqXOorgLjizIlU3ZiVOr5rw6Q7HGrZFA3XQ0GozdvcGmu0vKlrTzBJ6+9S+ZRjOvA4aB5egDdk67t4I3uXU6g14EDiNd5ki15D6c5/mjtfWR0+rau6pmo1KtxKKoF2TI14sZomDrMegbLWLWnKn+0hjRG8+VkMp7BL1N0sOFfg4GekvxxW62KdYPaj+/Gs3FL4+nkXKkimReqaFLKFdTC374d1DL+yu3gacSGgI+TMqvynNvykS3RPR9fn3Xxstb/HEH3FP+aulHbRCtxJN05dsuzDhQjnM7OEaeff4MN6VUK3UtRjQzzpMVnICo3sSlqvXY4WF5dvr+8seXdyLx9bbj67YujaYDIGy1MLy6ux1tM2PeKvdj1lWY2vEC/kR2WXcAC8wh2mHoh33Q3Kk09UjgwwgNoLJhUN3rv3bah03OiXqwjlsh3Z2OzPo9Fngns7SxSy3WIlYYP5NbDYcuqjExungovArNr/LP/F7nHi2k=</source>
  </file>
  <file path="database/relation.php" generated-path="database.relation.html" hash="ba633f28165f2a75772b418d94757bf3" package="phpunk\database">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="phpunk\database"/>
    </docblock>
    <class final="false" abstract="false" namespace="PHPunk\Database" line="19" package="phpunk\database">
      <extends/>
      <name>relation</name>
      <full_name>\PHPunk\Database\relation</full_name>
      <docblock line="19">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="19" description="phpunk\database"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="46" package="phpunk\database">
        <name>__construct</name>
        <full_name>\PHPunk\Database\relation::__construct()</full_name>
        <docblock line="46">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="46" description="&lt;p&gt;The name of the database relationship&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="46" description="&lt;p&gt;The primary database table&lt;/p&gt;" type="object" variable="$ptable">
            <type>object</type>
          </tag>
          <tag name="param" line="46" description="&lt;p&gt;The foreign database table&lt;/p&gt;" type="object" variable="$ftable">
            <type>object</type>
          </tag>
          <tag name="param" line="46" description="&lt;p&gt;The foreign key field&lt;/p&gt;" type="string" variable="$fkey">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="true">
          <name>$ptable</name>
          <default></default>
          <type>object</type>
        </argument>
        <argument line="0" by_reference="true">
          <name>$ftable</name>
          <default></default>
          <type>object</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$fkey</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <property final="false" static="false" visibility="public" line="19">
        <name>$name</name>
        <default/>
        <docblock>
          <description>The name of the database relationship</description>
          <long-description/>
          <tag name="var" description="&lt;p&gt;The name of the database relationship&lt;/p&gt;" type="string" line="19">
            <type by_reference="false">string</type>
          </tag>
          <tag name="magic" line="19"/>
          <tag name="property" line="19" description="The name of the database relationship" type="string" variable="$name">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="19">
        <name>$ptable</name>
        <default/>
        <docblock>
          <description>The primary database table</description>
          <long-description/>
          <tag name="var" description="&lt;p&gt;The primary database table&lt;/p&gt;" type="object" line="19">
            <type by_reference="false">object</type>
          </tag>
          <tag name="magic" line="19"/>
          <tag name="property" line="19" description="The primary database table" type="object" variable="$ptable">
            <type>object</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="19">
        <name>$ftable</name>
        <default/>
        <docblock>
          <description>The foreign database table</description>
          <long-description/>
          <tag name="var" description="&lt;p&gt;The foreign database table&lt;/p&gt;" type="object" line="19">
            <type by_reference="false">object</type>
          </tag>
          <tag name="magic" line="19"/>
          <tag name="property" line="19" description="The foreign database table" type="object" variable="$ftable">
            <type>object</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="19">
        <name>$pkey</name>
        <default/>
        <docblock>
          <description>The primary key field</description>
          <long-description/>
          <tag name="var" description="&lt;p&gt;The primary key field&lt;/p&gt;" type="string" line="19">
            <type by_reference="false">string</type>
          </tag>
          <tag name="magic" line="19"/>
          <tag name="property" line="19" description="The primary key field" type="string" variable="$pkey">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="19">
        <name>$fkey</name>
        <default/>
        <docblock>
          <description>The foreign key field</description>
          <long-description/>
          <tag name="var" description="&lt;p&gt;The foreign key field&lt;/p&gt;" type="string" line="19">
            <type by_reference="false">string</type>
          </tag>
          <tag name="magic" line="19"/>
          <tag name="property" line="19" description="The foreign key field" type="string" variable="$fkey">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="19">
        <name>$join</name>
        <default/>
        <docblock>
          <description>Alias for the INNER JOIN clause</description>
          <long-description/>
          <tag name="var" description="&lt;p&gt;Alias for the INNER JOIN clause&lt;/p&gt;" type="string" line="19">
            <type by_reference="false">string</type>
          </tag>
          <tag name="magic" line="19"/>
          <tag name="property" line="19" description="Alias for the INNER JOIN clause" type="string" variable="$join">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="19">
        <name>$inner</name>
        <default/>
        <docblock>
          <description>The INNER JOIN clause for this relationship</description>
          <long-description/>
          <tag name="var" description="&lt;p&gt;The INNER JOIN clause for this relationship&lt;/p&gt;" type="string" line="19">
            <type by_reference="false">string</type>
          </tag>
          <tag name="magic" line="19"/>
          <tag name="property" line="19" description="The INNER JOIN clause for this relationship" type="string" variable="$inner">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="19">
        <name>$left</name>
        <default/>
        <docblock>
          <description>The LEFT JOIN clause for this relationship</description>
          <long-description/>
          <tag name="var" description="&lt;p&gt;The LEFT JOIN clause for this relationship&lt;/p&gt;" type="string" line="19">
            <type by_reference="false">string</type>
          </tag>
          <tag name="magic" line="19"/>
          <tag name="property" line="19" description="The LEFT JOIN clause for this relationship" type="string" variable="$left">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="19">
        <name>$right</name>
        <default/>
        <docblock>
          <description>The RIGHT JOIN clause for this relationship</description>
          <long-description/>
          <tag name="var" description="&lt;p&gt;The RIGHT JOIN clause for this relationship&lt;/p&gt;" type="string" line="19">
            <type by_reference="false">string</type>
          </tag>
          <tag name="magic" line="19"/>
          <tag name="property" line="19" description="The RIGHT JOIN clause for this relationship" type="string" variable="$right">
            <type>string</type>
          </tag>
        </docblock>
      </property>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="19" code="PPC:ERR-50005">No summary for class \PHPunk\Database\relation</error>
      <error line="46" code="PPC:ERR-50008">No summary for method __construct()</error>
    </parse_markers>
    <source>eJylVVtv2jAUfk5+xRFC46Ix3sdgm7RuZZpoVfVxEjHBTlwSx3IcJlTx3+tbbjTQir3ZPuf7zncuOfnylcfcn47HPozhG0fhDkUY1FvBdn+3SKINyrGyTX2foRTnygPD/e29Nv9w5plfE4iMYyEPkEtBWQR9DYLHGIM5ZASkOpe8IHCCJM1YHlPexmebJxxK6HPlmVgGLmiKxKFGG1M3jNQwkglMI3YRVqrlO3xoxdJ3QnGy7fYnpX8Z5A3/p4wy+J5QlGuEqcVytbp5gN93yxWECSryM8ooY1iYUK8AjormF8pZ0iSYSMPy5+bn47UkgkaxZXlY/rp9H83UVw55/QzPvqeHxtMRVOVU/YAyiQVDCeyRoKZJngZ6qhl7JDH013qI1LRdgbRzdB2W/A9WTUQLyZFA6TWfRwP9/o+jA/T2p9Gh88Kgu4yLTUJDIAULTXvX61DplqII5dBk+RE+OL36RNzJEI/0MHh9PTaThekxzG1pdOUqg8t2XuY9a9hIZaubVRu12LmNpUDHjkamKFLqUyzj7HxGW+wSagu2aiYLgdNsj9dl04bNhEavxb4NuFpohFXRq8Lm/6gMY2i8eKFu9kDHGXyu77o+9u4JLAvBwCl67q01uHec1c426xa88XKOYLKwba1pzsWsyspt10qAXqHNqGYxdjNo1+HA7MvBqEGhl2CTwuyzCxSmcBp/7O5JtQXabXE7oO6LJZMHrge11GVHqZ7tk+zLctlfE3R4cLdhvD45JSGnJOSUhFRgJ0tNuMwKrha+VToyVleVXuCEBmD9zeYPXOAA7vTFeXwKjORAcVYO6k0HDHpmuI/+C3zMqaw=</source>
  </file>
  <file path="util/object.php" generated-path="util.object.html" hash="015a1d8ca46c2679f6f0b5fdc407b9a7" package="phpunk\util">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="phpunk\util"/>
    </docblock>
    <namespace-alias name="JsonSerializable">\JsonSerializable</namespace-alias>
    <class final="false" abstract="false" namespace="PHPunk\Util" line="18" package="phpunk\util">
      <extends/>
      <implements>\PHPunk\Util\collection</implements>
      <implements>\JsonSerializable</implements>
      <name>object</name>
      <full_name>\PHPunk\Util\object</full_name>
      <docblock line="18">
        <description>Basic reference implementation</description>
        <long-description></long-description>
        <tag name="see" line="18" description="JsonSerializable" link="http://us2.php.net/manual/en/class.jsonserializable.php"/>
        <tag name="see" line="18" description="Collectible Trait" link="\PHPunk\Util\collectible"/>
        <tag name="see" line="18" description="Mutable Trait" link="\PHPunk\Util\mutable"/>
        <tag name="see" line="18" description="PHPunk Wiki" link="http://github.com/oneeyedjames/phpunk/wiki/Mutable-Objects"/>
        <tag name="package" line="18" description="phpunk\util"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Util" line="26" package="phpunk\util">
        <name>__construct</name>
        <full_name>\PHPunk\Util\object::__construct()</full_name>
        <docblock line="26">
          <description>Creates a shallow clone of the passed data.</description>
          <long-description></long-description>
          <tag name="param" line="26" description="&lt;p&gt;OPTIONAL Any array or traversable object&lt;/p&gt;" type="mixed" variable="$data">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>array()</default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Util" line="61" package="phpunk\util">
        <name>has</name>
        <full_name>\PHPunk\Util\mutable::has()</full_name>
        <docblock line="61">
          <description>Determine whether or not a given key exists.</description>
          <long-description></long-description>
          <tag name="param" line="61" description="&lt;p&gt;The key&lt;/p&gt;" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="return" line="61" description="TRUE if the key exists, FALSE otherwise" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\PHPunk\Util\mutable</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Util" line="71" package="phpunk\util">
        <name>get</name>
        <full_name>\PHPunk\Util\mutable::get()</full_name>
        <docblock line="71">
          <description>Get the stored value for a given key.</description>
          <long-description></long-description>
          <tag name="param" line="71" description="&lt;p&gt;The key&lt;/p&gt;" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="param" line="71" description="&lt;p&gt;OPTIONAL The value to return if the given key does not exist&lt;/p&gt;" type="mixed" variable="$default">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$default</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <inherited_from>\PHPunk\Util\mutable</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Util" line="81" package="phpunk\util">
        <name>put</name>
        <full_name>\PHPunk\Util\mutable::put()</full_name>
        <docblock line="81">
          <description>Store a value for a given key.</description>
          <long-description></long-description>
          <tag name="param" line="81" description="&lt;p&gt;The key&lt;/p&gt;" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="param" line="81" description="&lt;p&gt;The value to be stored&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\PHPunk\Util\mutable</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Util" line="90" package="phpunk\util">
        <name>remove</name>
        <full_name>\PHPunk\Util\mutable::remove()</full_name>
        <docblock line="90">
          <description>Remove a key-value pair from the store.</description>
          <long-description></long-description>
          <tag name="param" line="90" description="&lt;p&gt;The key&lt;/p&gt;" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\PHPunk\Util\mutable</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJxtkkFvEzEQhc/rXzGHHtqIriWOFEpDL4CARKKIQ0HVxJlknXjtlT2mhKr/nfHuKoSmp6zmzcz7/Cav33ZNp/RkomACVx2aLa4JpJb99kdm66SulfLYUhKVYP5+XqRvIl0olRPBxxT8V4oWnf2DC0dSHve9w2QNRFpRJC+ztu0cteQZ2QYvHb1pIoKGuXuldU4va/GuPbFu0Wd0mrw2DlOqN2KTDmxK45H3fqEJzpFhKzW4Pvi+iWh539VmLlPwefz9Xx2h1pabvKhNaHXwRDtabkoaeghJ39ut1eOC89liI05pTAm+i9YH2D8BQq/+iyHtMYN/cfQWeFBVyXeElFirkmsleNeRkCkBQmrQuXAPxgkbhBVwI+cTM1rCEhnr0t/PyHEjttDa3yKdFA1m85sPsy/TTzD1O8AYcQchAkf8RTH1CANxmdeq6vLCyT1X2ffEcHdn5CQcs+HTYeEbuP15VrirE25sOr90AZfTsnhoOLtQ1ePBO67s2of49I8BK6E4uuzzDJuDNjodvCNxjh5GBA4DwOD9qP4C8276NA==</source>
  </file>
  <file path="component/template.php" generated-path="component.template.html" hash="2a033469928df544f03d2303d8ae5ca7" package="phpunk\component">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="phpunk\component"/>
    </docblock>
    <class final="false" abstract="false" namespace="PHPunk\Component" line="8" package="phpunk\component">
      <extends/>
      <name>template</name>
      <full_name>\PHPunk\Component\template</full_name>
      <docblock line="8">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="8" description="phpunk\component"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Component" line="17" package="phpunk\component">
        <name>__construct</name>
        <full_name>\PHPunk\Component\template::__construct()</full_name>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="17" description="&lt;p&gt;Directory path containing template files&lt;/p&gt;" type="string" variable="$base_dir">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$base_dir</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Component" line="25" package="phpunk\component">
        <name>add_folder</name>
        <full_name>\PHPunk\Component\template::add_folder()</full_name>
        <docblock line="25">
          <description>Adds directories containing template files.</description>
          <long-description></long-description>
          <tag name="param" line="25" description="&lt;p&gt;Directory path&lt;/p&gt;" type="string" variable="$dir">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$dir</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Component" line="35" package="phpunk\component">
        <name>locate</name>
        <full_name>\PHPunk\Component\template::locate()</full_name>
        <docblock line="35">
          <description>Searches directories for matching template file.</description>
          <long-description></long-description>
          <tag name="param" line="35" description="&lt;p&gt;Name of the view&lt;/p&gt;" type="string" variable="$view">
            <type>string</type>
          </tag>
          <tag name="param" line="35" description="&lt;p&gt;Name of the resource&lt;/p&gt;" type="string" variable="$resource">
            <type>string</type>
          </tag>
          <tag name="return" line="35" description="Path to template file" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$view</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$resource</name>
          <default>false</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Component" line="59" package="phpunk\component">
        <name>load</name>
        <full_name>\PHPunk\Component\template::load()</full_name>
        <docblock line="59">
          <description>Renders matching template with provided parameters.</description>
          <long-description></long-description>
          <tag name="param" line="59" description="&lt;p&gt;Name of the view&lt;/p&gt;" type="string" variable="$view">
            <type>string</type>
          </tag>
          <tag name="param" line="59" description="&lt;p&gt;Name of the resource&lt;/p&gt;" type="string" variable="$resource">
            <type>string</type>
          </tag>
          <tag name="param" line="59" description="&lt;p&gt;OPTIONAL Named parameters passed into template&lt;/p&gt;" type="array" variable="$vars">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$view</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$resource</name>
          <default>false</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$vars</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="8" code="PPC:ERR-50005">No summary for class \PHPunk\Component\template</error>
      <error line="17" code="PPC:ERR-50008">No summary for method __construct()</error>
    </parse_markers>
    <source>eJytVF1v2jAUfSa/4gohNSBW3ss6hrZqQ9soop02aZsi49wQq8GObIe2mvjvuzb5okCflgcUfM89Pjn32G8neZoHo8EggAG8zxl/YGsEWivkw2+uNrmSKC0VR0Eg2QYNQRAWnxeu/qGqj4OAZ8wYsLjJM2YR/gYdR9pxrGItlUYQ0qKWLIMt04KtMnTVUQD05FpsXVcvioU2cA1Ma/Yc9om3ocmZZhswVgu5ht6KGXRo+Cg0cqv0M+TMpsCVtExIh6nFJCJD09qtWGWCQ1JIboWSEEXURLwFt2HN26dPgPLp2VSYN+8OxTXIsQfuWlqncWwgLoUJNOdVXZ76tuPPOi+exXGUqCxGHfZekf3rDwl3gGOxd8g0T/FQcKI0bJjl6ZHkk4q3Ah9hTvkAlYBNEdzCKaBGowpNEWqDq8V9g0ZbaFl1LNxQrTrUcN6OTHEChV7QsLXdNSQsM+js6XR63npnSFO/LhEwqea7p7gQMsaniz5cUWNnX+rWfSOP6g6hRLcqvq/bEFCWq8GQuch4CmEphBnwb+6AtQd4iG2H0HXQS9VAyjoigVCYyPGQwLI4qnkv6Ux3+33P7eCly+eQ4xK4q8XsGv019MDCCbz0xTPBFa3X/1ou0HzXa9QRaq102P0mjDkKW7MVOXkTfb+7WUY/psv5bP6pMrT6Ej+943Qvkewnx47D/CgoWblWWxFjDD6mSDfU6SP5PwO+b/BRImJG4m4X97Pb+fSrb2proVdjaIXuzuYIvJZ+Fp/N/rDcrL5d21Fz6fFeu5Huk3bmKPVfJhSfrGbu6nTsNKWf98vo7stsUd6L9Q6SZ0VcTnTcitX+dxf8A2wpAjQ=</source>
  </file>
  <file path="component/model.php" generated-path="component.model.html" hash="4f4d4cd0f997bea74b90db53210e100b" package="phpunk\component">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="phpunk\component"/>
    </docblock>
    <namespace-alias name="query">\PHPunk\Database\query</namespace-alias>
    <namespace-alias name="record">\PHPunk\Database\record</namespace-alias>
    <class final="false" abstract="false" namespace="PHPunk\Component" line="15" package="phpunk\component">
      <extends/>
      <name>model</name>
      <full_name>\PHPunk\Component\model</full_name>
      <docblock line="15">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="15" description="phpunk\component"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Component" line="36" package="phpunk\component">
        <name>__construct</name>
        <full_name>\PHPunk\Component\model::__construct()</full_name>
        <docblock line="36">
          <description></description>
          <long-description></long-description>
          <tag name="property" line="36" description="Resource name for this component" type="string" variable="$resource">
            <type>string</type>
          </tag>
          <tag name="property" line="36" description="Database instance for this component" type="object" variable="$database">
            <type>object</type>
          </tag>
          <tag name="property" line="36" description="OPTIONAL Cache instance for this component" type="object" variable="$cache">
            <type>object</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$resource</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$database</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$cache</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Component" line="59" package="phpunk\component">
        <name>create_record</name>
        <full_name>\PHPunk\Component\model::create_record()</full_name>
        <docblock line="59">
          <description>Instantiates a new database record with the given data.</description>
          <long-description></long-description>
          <tag name="param" line="59" description="&lt;p&gt;Associative array of data or record ID&lt;/p&gt;" type="mixed" variable="$data">
            <type>mixed</type>
          </tag>
          <tag name="return" line="59" description="New database record" type="object">
            <type>object</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>array()</default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Component" line="70" package="phpunk\component">
        <name>get_record</name>
        <full_name>\PHPunk\Component\model::get_record()</full_name>
        <docblock line="70">
          <description>Fetches a single database record by unique identifier.</description>
          <long-description>Returns cached copy, if available.</long-description>
          <tag name="param" line="70" description="&lt;p&gt;Unique identifier for database record&lt;/p&gt;" type="mixed" variable="$id">
            <type>mixed</type>
          </tag>
          <tag name="return" line="70" description="Record identified by parameter, NULL on failure" type="object">
            <type>object</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Component" line="86" package="phpunk\component">
        <name>put_record</name>
        <full_name>\PHPunk\Component\model::put_record()</full_name>
        <docblock line="86">
          <description>Saves a single database record to the database.</description>
          <long-description>Invalidates any previously-cached copy of record.</long-description>
          <tag name="param" line="86" description="&lt;p&gt;Record instance to save to database&lt;/p&gt;" type="object" variable="$record">
            <type>object</type>
          </tag>
          <tag name="return" line="86" description="Record instance updated with auto-generated id, FALSE on failure" type="object">
            <type>object</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$record</name>
          <default></default>
          <type>object</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Component" line="99" package="phpunk\component">
        <name>remove_record</name>
        <full_name>\PHPunk\Component\model::remove_record()</full_name>
        <docblock line="99">
          <description>Deletes a single database record by unique identifier.</description>
          <long-description>Invalidates any previously-cached copy of the record.</long-description>
          <tag name="param" line="99" description="&lt;p&gt;Unique identifier for database record&lt;/p&gt;" type="mixed" variable="$id">
            <type>mixed</type>
          </tag>
          <tag name="return" line="99" description="TRUE on success, FALSE on failure" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="PHPunk\Component" line="113" package="phpunk\component">
        <name>query</name>
        <full_name>\PHPunk\Component\model::query()</full_name>
        <docblock line="113">
          <description>Runs a raw parameterized SQL query against the database.</description>
          <long-description>Retrieves data from database.</long-description>
          <tag name="param" line="113" description="&lt;p&gt;SQL query to run&lt;/p&gt;" type="string" variable="$sql">
            <type>string</type>
          </tag>
          <tag name="param" line="113" description="&lt;p&gt;OPTIONAL Array of parameter values for query&lt;/p&gt;" type="array" variable="$params">
            <type>array</type>
          </tag>
          <tag name="return" line="113" description="Result instance returned by query" type="object">
            <type>object</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$sql</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$params</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="PHPunk\Component" line="125" package="phpunk\component">
        <name>execute</name>
        <full_name>\PHPunk\Component\model::execute()</full_name>
        <docblock line="125">
          <description>Runs a raw parameterized SQL query against the database.</description>
          <long-description>Manipulates data in database.</long-description>
          <tag name="param" line="125" description="&lt;p&gt;SQL query to run&lt;/p&gt;" type="string" variable="$sql">
            <type>string</type>
          </tag>
          <tag name="param" line="125" description="&lt;p&gt;OPTIONAL Array of parameter values for query&lt;/p&gt;" type="array" variable="$params">
            <type>array</type>
          </tag>
          <tag name="return" line="125" description="TRUE on success, FALSE on failure" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$sql</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$params</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="PHPunk\Component" line="136" package="phpunk\component">
        <name>make_query</name>
        <full_name>\PHPunk\Component\model::make_query()</full_name>
        <docblock line="136">
          <description>Creates a new database query object for this component.</description>
          <long-description></long-description>
          <tag name="see" line="136" description="" link="\PHPunk\Component\PHPunk\Database\query"/>
          <tag name="param" line="136" description="&lt;p&gt;Name parameters to pass to query object&lt;/p&gt;" type="array" variable="$args">
            <type>array</type>
          </tag>
          <tag name="return" line="136" description="Database query object" type="object">
            <type>object</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$args</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="PHPunk\Component" line="146" package="phpunk\component">
        <name>get_cached_object</name>
        <full_name>\PHPunk\Component\model::get_cached_object()</full_name>
        <docblock line="146">
          <description>Fetches a cached copy of a data object by unique identifier.</description>
          <long-description></long-description>
          <tag name="param" line="146" description="&lt;p&gt;Unique identifier for database record&lt;/p&gt;" type="mixed" variable="$id">
            <type>mixed</type>
          </tag>
          <tag name="return" line="146" description="Cached data object, NULL on failure" type="object">
            <type>object</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="PHPunk\Component" line="156" package="phpunk\component">
        <name>put_cached_object</name>
        <full_name>\PHPunk\Component\model::put_cached_object()</full_name>
        <docblock line="156">
          <description>Caches a copy of a single data object by unique identifier.</description>
          <long-description></long-description>
          <tag name="param" line="156" description="&lt;p&gt;Unique identifier for data object&lt;/p&gt;" type="mixed" variable="$id">
            <type>mixed</type>
          </tag>
          <tag name="param" line="156" description="&lt;p&gt;data object to cache&lt;/p&gt;" type="object" variable="$object">
            <type>object</type>
          </tag>
          <tag name="return" line="156" description="Cached data object" type="object">
            <type>object</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$object</name>
          <default></default>
          <type>object</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="PHPunk\Component" line="164" package="phpunk\component">
        <name>remove_cached_object</name>
        <full_name>\PHPunk\Component\model::remove_cached_object()</full_name>
        <docblock line="164">
          <description>Un-caches a copy of a single data object by unique identifier.</description>
          <long-description></long-description>
          <tag name="param" line="164" description="&lt;p&gt;Unique identifier for database record&lt;/p&gt;" type="mixed" variable="$id">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <property final="false" static="false" visibility="public" line="15">
        <name>$resource</name>
        <default/>
        <docblock>
          <description>Resource name for this component</description>
          <long-description/>
          <tag name="var" description="&lt;p&gt;Resource name for this component&lt;/p&gt;" type="string" line="15">
            <type by_reference="false">string</type>
          </tag>
          <tag name="magic" line="15"/>
          <tag name="property" line="15" description="Resource name for this component" type="string" variable="$resource">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="15">
        <name>$insert_id</name>
        <default/>
        <docblock>
          <description>Most recent auto-generated Id on the database connection</description>
          <long-description/>
          <tag name="var" description="&lt;p&gt;Most recent auto-generated Id on the database connection&lt;/p&gt;" type="mixed" line="15">
            <type by_reference="false">mixed</type>
          </tag>
          <tag name="magic" line="15"/>
          <tag name="property" line="15" description="Most recent auto-generated Id on the database connection" type="mixed" variable="$insert_id">
            <type>mixed</type>
          </tag>
        </docblock>
      </property>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="15" code="PPC:ERR-50005">No summary for class \PHPunk\Component\model</error>
      <error line="36" code="PPC:ERR-50015">Argument $resource is missing from the Docblock of __construct</error>
      <error line="36" code="PPC:ERR-50015">Argument $database is missing from the Docblock of __construct</error>
      <error line="36" code="PPC:ERR-50015">Argument $cache is missing from the Docblock of __construct</error>
      <error line="36" code="PPC:ERR-50008">No summary for method __construct()</error>
    </parse_markers>
    <source>eJzNV1lT20gQfrZ/RT+4CpsyofY1rEko2NRSRQgL4SmhXGOpbc8ijZQ5TLxb/Pf0HJJlHZyp7PJipL6/r3um9fu7fJn393d3+7AL73MW3bIFAr0z4vZrlKV5JlBoEu73+4KlqEgF4eLPCys/LuQH/b5R5esTptmMKfz6zaBcH7SKJEaZjMmuDC2zHKVeg9KSiwUMJKrMSAp2Wfxj48M8k6CXXEE1uYp5yr9jDAMuFD1OeQwfM6WBwpEmMKOzvQUKlEyT1mkMmSBvCHHIi7wKgZHmmXA1RwlTCtIsxgT+7fdssj0bji9EJhG40CgFS2DFJGezBK10v9/LJV9RBBhMiyqo0hdYF2m9zDpi0XLb9BUgb9tns78JJRiUuBXEUlpKMxE9w4dLEz5dfD79dH50Bsfu8RE3tk4zS3gEcyMcXTCdEndUl4n0sKxrvElxXESagDBJMrJ89gbW9d5hSRMJBxvKNvKyzsnGYVXuPdPfJEQh4X0LaSlbUM4p6mUWd9axQKrgFtc+RXXHdbSEypteZDPZKfLceWvf9SRqIwXUKzrYGJQz0W5R1LV3WCpa4/vtSk4dMZpTiylgIPBuMzx+qIESXrqpWvAVCid+E7hnkqXFiNr3cKRUFpEz0gQmJaO2mDsLIN6Dv9MTbx3yDX1z3ozcgWgkkbKdep2hjzuBLzceTT6HIVdTYVKUPPLi0QhKtR3CCyaH/sWNRSTkYUuv+hw3sB/VuuADEpMONkXTl2ADudkajOB0bAKPqdP5nKP00F26mDQFtrliGoZ8PQZKna0YT+z0tyFMp9913Z0bqBbc6vBe+oxKQ5ec84507ozh/PrszJ6ec4pvJHZAT61c4s7jDeCDUPCkwMwq+tqmPgGnP+pX2rS8MjpcVBq4GrbGyRhKx0GUm5bQ4yLeyAWs57BF6xVbPUSqzraumDdhjFYs4bGfIkHISlzxzKhkvVeh2A6D97JFb3FyhgAFVcWRSQEVpWR/i6APMVyYmTx2t6Ib39pNaQH5cHR29cfjlFs4C+wDhN20Vzir2jU5C54e4c1r0QH2LP5OMEH9srF8Oo22BVqofM2kzrIsQSbg8+W140WZKEKlnsyUxDRbYdd8KpPoVqJqZo/OV9BvTneNGRuwxsylEZYWye42Rw//hwC7+usM3HYJbMFsB7eMGB2ZkqMdTXeUz2WW1jQCB8UypL4lFcc0PdKIqp6/nwbuQW0WlqPi2ipTpJUsMRTXEuictY+fQ7gcPy/152xp5Pa5TJM+CUrinHho8x2X6Ux8esNRWGzK13S3eUl4NYJ3pdFbbzRV1Bc4tP7t8kH6CzUcjeG3UeW6azZCSxr1G+9VBH5kgucmccPlKOTif0Hgs+euySB+x8ho/O85bE2kzuKxW6Aa656HObRzc08PFCns+DBsYcYmDef2C6SkQlkec/sVRr/ViG0zddKWWjcLKbvFaehiGzrAbv/9sqPtVrVzUzkCqyt1ZQcMDmrQjn013Stg7X5gYev1hXTfOD9vwzv2CVTCdm51Teja9zWHX4jyfuvbyO1kHZdFvdtYgVAJTeVe/qkIbbXS9m4VfqshqQFdLU8Dsxu7roXTPzwIIpm2g7gxr6F5Lfwm8msAbfkYa9bfuRA8VLk3eqiD7vs/AK5WKRk=</source>
  </file>
  <file path="index.php" generated-path="index.html" hash="399facb524ecf68016f9cdefd0cf1f9f" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJyF0s0OwjAIAOD7nsLbbu4BNPFRTEeJq7alo9Rkb2/9yZYYtp35oEA5X9KQmoZxLI7xShHw0AKFZKQDnpLQsYL2pAuZEuYtMIikX/wPFHG+A/IeQVzvUa3yQaGI2QTU32sR/RkwMOipyEysRoQeGPWcJ0bRG2GvN2BN7d5k7HJtJBg1eTbrg86kZ2dvO4bRG3GkzzCrsSBPe4WA2O6ZXPza9usVUKw76wJZ9KuX8jVAUfh9Efq3LFAwpDqhvoWFMUaLvFut5Jm8AJ1FGwc=</source>
  </file>
  <file path="database/table.php" generated-path="database.table.html" hash="9a6859edda8e1eae37693011ea60f938" package="phpunk\database">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="phpunk\database"/>
    </docblock>
    <class final="false" abstract="false" namespace="PHPunk\Database" line="13" package="phpunk\database">
      <extends/>
      <name>table</name>
      <full_name>\PHPunk\Database\table</full_name>
      <docblock line="13">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="13" description="phpunk\database"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="33" package="phpunk\database">
        <name>__construct</name>
        <full_name>\PHPunk\Database\table::__construct()</full_name>
        <docblock line="33">
          <description></description>
          <long-description></long-description>
          <tag name="property" line="33" description="Name of database table" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="property" line="33" description="Name of primary key" type="string" variable="$pkey">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$pkey</name>
          <default>'id'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="57" package="phpunk\database">
        <name>relation_exists</name>
        <full_name>\PHPunk\Database\table::relation_exists()</full_name>
        <docblock line="57">
          <description>Returns whether or not a relationship exists with the given name</description>
          <long-description></long-description>
          <tag name="param" line="57" description="&lt;p&gt;Name of the table relationship&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="57" description="TRUE if relationship exists, FALSE otherwise" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="66" package="phpunk\database">
        <name>get_relation</name>
        <full_name>\PHPunk\Database\table::get_relation()</full_name>
        <docblock line="66">
          <description>Returns a relation object for the given name</description>
          <long-description></long-description>
          <tag name="param" line="66" description="&lt;p&gt;Name of the table relationship&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="66" description="The named relation object" type="object">
            <type>object</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="75" package="phpunk\database">
        <name>add_relation</name>
        <full_name>\PHPunk\Database\table::add_relation()</full_name>
        <docblock line="75">
          <description>Adds a relation for the given name</description>
          <long-description></long-description>
          <tag name="param" line="75" description="&lt;p&gt;Name of the table relationship&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="75" description="&lt;p&gt;The relation object&lt;/p&gt;" type="object" variable="$rel">
            <type>object</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$rel</name>
          <default></default>
          <type>object</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="83" package="phpunk\database">
        <name>remove_relation</name>
        <full_name>\PHPunk\Database\table::remove_relation()</full_name>
        <docblock line="83">
          <description>Removes the relation with the given name</description>
          <long-description></long-description>
          <tag name="param" line="83" description="&lt;p&gt;Name of the table relationship&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="90" package="phpunk\database">
        <name>clear_relations</name>
        <full_name>\PHPunk\Database\table::clear_relations()</full_name>
        <docblock line="90">
          <description>Removes all relationships from this table.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="99" package="phpunk\database">
        <name>select_sql</name>
        <full_name>\PHPunk\Database\table::select_sql()</full_name>
        <docblock line="99">
          <description>Generates a SELECT query string, based on this table's primary key</description>
          <long-description></long-description>
          <tag name="param" line="99" description="&lt;p&gt;OPTIONAL relationship name to query&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="99" description="A parameterized SQL query" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>false</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="118" package="phpunk\database">
        <name>insert_sql</name>
        <full_name>\PHPunk\Database\table::insert_sql()</full_name>
        <docblock line="118">
          <description>Generates an INSERT query string, based on the given data</description>
          <long-description></long-description>
          <tag name="param" line="118" description="&lt;p&gt;An array or iterable object of key-value pairs&lt;/p&gt;" type="mixed" variable="$record">
            <type>mixed</type>
          </tag>
          <tag name="param" line="118" description="&lt;p&gt;An array to be populated with query parameters&lt;/p&gt;" type="array" variable="$params">
            <type>array</type>
          </tag>
          <tag name="return" line="118" description="A parameterized SQL query" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$record</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="true">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="140" package="phpunk\database">
        <name>update_sql</name>
        <full_name>\PHPunk\Database\table::update_sql()</full_name>
        <docblock line="140">
          <description>Generates an UPDATE query string, based on the given data</description>
          <long-description></long-description>
          <tag name="param" line="140" description="&lt;p&gt;An array or iterable object of key-value pairs&lt;/p&gt;" type="mixed" variable="$record">
            <type>mixed</type>
          </tag>
          <tag name="param" line="140" description="&lt;p&gt;An array to be populated with query parameters&lt;/p&gt;" type="array" variable="$params">
            <type>array</type>
          </tag>
          <tag name="return" line="140" description="A parameterized SQL query" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$record</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="true">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Database" line="162" package="phpunk\database">
        <name>delete_sql</name>
        <full_name>\PHPunk\Database\table::delete_sql()</full_name>
        <docblock line="162">
          <description>Generates a DELETE query string, based on this table's primary key</description>
          <long-description></long-description>
          <tag name="param" line="162" description="&lt;p&gt;OPTIONAL relationship name to query&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="162" description="A parameterized SQL query" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>false</default>
          <type>string</type>
        </argument>
      </method>
      <property final="false" static="false" visibility="public" line="13">
        <name>$name</name>
        <default/>
        <docblock>
          <description>Name of database table</description>
          <long-description/>
          <tag name="var" description="&lt;p&gt;Name of database table&lt;/p&gt;" type="string" line="13">
            <type by_reference="false">string</type>
          </tag>
          <tag name="magic" line="13"/>
          <tag name="property" line="13" description="Name of database table" type="string" variable="$name">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="13">
        <name>$pkey</name>
        <default/>
        <docblock>
          <description>Name of primary key</description>
          <long-description/>
          <tag name="var" description="&lt;p&gt;Name of primary key&lt;/p&gt;" type="string" line="13">
            <type by_reference="false">string</type>
          </tag>
          <tag name="magic" line="13"/>
          <tag name="property" line="13" description="Name of primary key" type="string" variable="$pkey">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="13">
        <name>$relations</name>
        <default/>
        <docblock>
          <description>Relationships to other database tables</description>
          <long-description/>
          <tag name="var" description="&lt;p&gt;Relationships to other database tables&lt;/p&gt;" type="array" line="13">
            <type by_reference="false">array</type>
          </tag>
          <tag name="magic" line="13"/>
          <tag name="property" line="13" description="Relationships to other database tables" type="array" variable="$relations">
            <type>array</type>
          </tag>
        </docblock>
      </property>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="13" code="PPC:ERR-50005">No summary for class \PHPunk\Database\table</error>
      <error line="33" code="PPC:ERR-50015">Argument $name is missing from the Docblock of __construct</error>
      <error line="33" code="PPC:ERR-50015">Argument $pkey is missing from the Docblock of __construct</error>
      <error line="33" code="PPC:ERR-50008">No summary for method __construct()</error>
    </parse_markers>
    <source>eJzlVl1P20gUfU5+xS2KNgkKtM/NAo3AbJHShCZh+8BWzsSeJFMmY3fGDqUV/33vfNixU4fSFq2QVkLAjO/HOfeeuTN/nsTLuP5yf78O+/AmJsENWVDAvVTc/BOShMyIovjtZb0uyIoqtKBw+fZSfz5zn7v1TQAZxVQmd6ASycQCGtoJBvpXNIcsHuAfTqsd4ht6lzvEkq2IvAPcK1sTKckdNCTlJGGRUDDK/luyWEESQZQsqdzKqAyRgBOl7AZ8q9c09JoOzhYikhSYSKgUhMOaSGZw1rRXDbGsSUKh4RtORyBSzpH6LwQwHH8nAPJWGMBUodUuxfipDlR77GyBg5HOOAtgnopAVxx8P8C6JzINkpbJ1nEhjqDJwmZbF7nWSJZMHRxntTN23cK+czCOuH9fUZYVWWDaFU2WUbgTyoIiCIxhs6pblgRLKOzUAs2+qdM3X+t1TdIklQKKALsbQ42n2tAhzQxzKVZb645p6/syt5GxUnC7pEavkQQRJUBAFvQM9AtTCRqxZAloBgu2pgI0UtdBIsmquuHa3Eq9GNG6OYizKOKUCJiMrjxg86rUHTjv9ceePVS3TNEd9c9cfetm5WAL75IxpXSHClW5NkYf293qymxKAdHsEw0SmGORnr4KLvgELbVruJ12B2PUm59ZVtB9U8F0i2gvDEssn5iedXPs9MA0FB9HjoThFrmOCVE+0gVq+gTj8rtWrqI1VQZmnvhpxVypRZ21sjmpeLQILXLCeSmlgrmMVqADWECHO0AEeLJkjkG1vq9ccYyXcv9FBZU47rU4xl7fO53A55TKbEx3QM/xEDDJBkZTbc/rynoOLycXw0GvXz7q5hPenCZL6Ww45x6YWBRvJ/YVU4/f9zfGFeQV5agtX33mtvhIdU64ck3ASVPsiV1rfR5lQ7PibDlbrKCRQW5qwr+w6js4ju3Xk/LytVvOzbJbnNJ7rsDIyD/t9U/98+HV4MwfDT+MYWpzTQ/34Xw0fOeCfIqYgA9vvZGnDXIM08Nspa+HKQI82TOZdGfzdKYK9jaoPwqDS13KtJW9lG+HjgRcDMbe6AEhZcdRvxOK8lmxL2iC1INIhtAT7gGGo4qhGkx53YjBY4pIDtaEp/iOJEyqYhz3bjMLtYmDqpuhdRSn2G1MZIaDBZlLTj2FJBmefOkkacl04A8Hx53NOaM83Hpd1XAoU2JeEq4ERIG1hKNjaBi2RR3bTy9yfcabB0iW4VpPy72pXU2tSmoOivlmozr1OK00Yo4PcI2OrWIehbS11wH8MVj9OeO89aoDQZSKxIFQ7Q40T5rtdrdEruyemXaLenRauRhMhlvKy0PD373+lTfGDYur/aD4ri7PehPv/yu+NEZm9BmKbzOmfizAxyioFMRivi5g+ViSmVNFWWFjb5KF/IU5B2c4Sh9S2vO8L0O8LzN9PPP70hX4P7sbXb6fvQXv6/8CHiNElQ==</source>
  </file>
  <file path="compat/types.php" generated-path="compat.types.html" hash="4799c138fc4c562a7c734f9b1a3603dd" package="phpunk\compat">
    <docblock line="0">
      <description>Backwards-compatibility functions</description>
      <long-description></long-description>
      <tag name="package" line="0" description="phpunk\compat"/>
    </docblock>
    <function namespace="" line="15" package="phpunk\compat">
      <name>boolval</name>
      <full_name>\boolval()</full_name>
      <docblock line="15">
        <description>Returns the boolean value of var.</description>
        <long-description></long-description>
        <tag name="package" line="15" description="phpunk\compat"/>
        <tag name="param" line="15" description="&lt;p&gt;The scalar value being converted to a boolean&lt;/p&gt;" type="mixed" variable="$var">
          <type>mixed</type>
        </tag>
        <tag name="return" line="15" description="The boolean value of &lt;b&gt;var&lt;/b&gt;" type="boolean">
          <type>boolean</type>
        </tag>
      </docblock>
      <argument line="0" by_reference="false">
        <name>$var</name>
        <default></default>
        <type>mixed</type>
      </argument>
    </function>
    <function namespace="" line="27" package="phpunk\compat">
      <name>intval</name>
      <full_name>\intval()</full_name>
      <docblock line="27">
        <description>Returns the integer value of var.</description>
        <long-description></long-description>
        <tag name="package" line="27" description="phpunk\compat"/>
        <tag name="param" line="27" description="&lt;p&gt;The scalar value being converted to an integer&lt;/p&gt;" type="mixed" variable="$var">
          <type>mixed</type>
        </tag>
        <tag name="return" line="27" description="The integer value of &lt;b&gt;var&lt;/b&gt;" type="boolean">
          <type>boolean</type>
        </tag>
      </docblock>
      <argument line="0" by_reference="false">
        <name>$var</name>
        <default></default>
        <type>mixed</type>
      </argument>
    </function>
    <function namespace="" line="39" package="phpunk\compat">
      <name>floatval</name>
      <full_name>\floatval()</full_name>
      <docblock line="39">
        <description>Returns the float value of var.</description>
        <long-description></long-description>
        <tag name="package" line="39" description="phpunk\compat"/>
        <tag name="param" line="39" description="&lt;p&gt;The scalar value being converted to a float&lt;/p&gt;" type="mixed" variable="$var">
          <type>mixed</type>
        </tag>
        <tag name="return" line="39" description="The float value of &lt;b&gt;var&lt;/b&gt;" type="float">
          <type>float</type>
        </tag>
      </docblock>
      <argument line="0" by_reference="false">
        <name>$var</name>
        <default></default>
        <type>mixed</type>
      </argument>
    </function>
    <function namespace="" line="51" package="phpunk\compat">
      <name>stringval</name>
      <full_name>\stringval()</full_name>
      <docblock line="51">
        <description>Returns the string value of var.</description>
        <long-description></long-description>
        <tag name="package" line="51" description="phpunk\compat"/>
        <tag name="param" line="51" description="&lt;p&gt;The scalar value being converted to a string&lt;/p&gt;" type="mixed" variable="$var">
          <type>mixed</type>
        </tag>
        <tag name="return" line="51" description="The string value of &lt;b&gt;var&lt;/b&gt;" type="float">
          <type>float</type>
        </tag>
      </docblock>
      <argument line="0" by_reference="false">
        <name>$var</name>
        <default></default>
        <type>mixed</type>
      </argument>
    </function>
    <function namespace="" line="63" package="phpunk\compat">
      <name>is_iterable</name>
      <full_name>\is_iterable()</full_name>
      <docblock line="63">
        <description>Verify that the contents of a variable is accepted by the iterable pseudo-type, i.e. that it is an array or an object implementing Traversable.</description>
        <long-description></long-description>
        <tag name="package" line="63" description="phpunk\compat"/>
        <tag name="param" line="63" description="&lt;p&gt;The value to check&lt;/p&gt;" type="mixed" variable="$var">
          <type>mixed</type>
        </tag>
        <tag name="return" line="63" description="Returns &lt;b&gt;TRUE&lt;/b&gt; if &lt;b&gt;var&lt;/b&gt; is iterable, &lt;b&gt;FALSE&lt;/b&gt; otherwise." type="boolean">
          <type>boolean</type>
        </tag>
      </docblock>
      <argument line="0" by_reference="false">
        <name>$var</name>
        <default></default>
        <type>mixed</type>
      </argument>
    </function>
    <source>eJytk89u2zAMxs/2U3DAgCZBmzzAgu4PsJ126rydBhSyQidcbMmQ5LbG2ncfadld29htDrkJ5seP/H6y1h/rXZ2uFosUFvBF6f2tcht/oW1Vq0A5lRRaKBqjA1njWSS6TzUL1RaBexuz/x3VXFmlKRUwezc0XOMd+eBnZ7m15Y0qz+Zz+JsmMi5hnysMjTMewg5BFKgMsKpBsAUf3FJUnZInOlVBRXe4gfdcgox7vFYlH2NLjmS2oK25QRdYFSyowTV6uG7c46RsbOo6v2T39Sq/lJ5VmgxRoI8wk+ldiqT3m0llLp8/pMlD+jDFgEx4HQELcIvutAjMYDvJ4GDsNIMYYQQBF44gUJRWvcGgk5z4J+g8n8WPU7LDedPRh91HwnelI+L74Hi71/NHzYkBRNMJAi8nTiN43H+EQawd8wr8NQV0Ki/xBYZf6KhomQIvJig4REATvCylBARJE5AHpTXWki5v48PpDaH22GzsRWhrPAda4jK6Uei6DCjnVAvWydnmf1BzoapLrHiOQMicYm5evN6iHnkxXr1DvR99XMO9MtHs6udXQQr0FLBsNex+Lt+/ff7+I+os53K35OMez97gf4CH98DFLmNfub+PC5PxQRmNTPJJxP6i/gHGe/E1</source>
  </file>
  <file path="compat/crypto.php" generated-path="compat.crypto.html" hash="4de23e4aff5ae89b99a04235eba39edb" package="phpunk\compat\crypto">
    <docblock line="0">
      <description>Backwards-compatibility functions and constants</description>
      <long-description></long-description>
      <tag name="package" line="0" description="phpunk\compat\crypto"/>
    </docblock>
    <constant namespace="" line="8" package="phpunk\compat\crypto">
      <name>PASSWORD_BCRYPT</name>
      <full_name>\PASSWORD_BCRYPT</full_name>
      <value>1</value>
      <docblock line="8">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="8" description="phpunk\compat\crypto"/>
      </docblock>
    </constant>
    <constant namespace="" line="9" package="phpunk\compat\crypto">
      <name>PASSWORD_DEFAULT</name>
      <full_name>\PASSWORD_DEFAULT</full_name>
      <value>PASSWORD_BCRYPT</value>
      <docblock line="9">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="9" description="phpunk\compat\crypto"/>
      </docblock>
    </constant>
    <function namespace="" line="12" package="phpunk\compat\crypto">
      <name>random_bytes</name>
      <full_name>\random_bytes()</full_name>
      <docblock line="12">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="12" description="phpunk\compat\crypto"/>
      </docblock>
      <argument line="0" by_reference="false">
        <name>$length</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="" line="18" package="phpunk\compat\crypto">
      <name>hash_equals</name>
      <full_name>\hash_equals()</full_name>
      <docblock line="18">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="18" description="phpunk\compat\crypto"/>
      </docblock>
      <argument line="0" by_reference="false">
        <name>$hash1</name>
        <default></default>
        <type/>
      </argument>
      <argument line="0" by_reference="false">
        <name>$hash2</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="" line="24" package="phpunk\compat\crypto">
      <name>password_hash</name>
      <full_name>\password_hash()</full_name>
      <docblock line="24">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="24" description="phpunk\compat\crypto"/>
      </docblock>
      <argument line="0" by_reference="false">
        <name>$password</name>
        <default></default>
        <type/>
      </argument>
      <argument line="0" by_reference="false">
        <name>$algo</name>
        <default></default>
        <type/>
      </argument>
      <argument line="0" by_reference="false">
        <name>$options</name>
        <default>array()</default>
        <type/>
      </argument>
    </function>
    <function namespace="" line="30" package="phpunk\compat\crypto">
      <name>password_verify</name>
      <full_name>\password_verify()</full_name>
      <docblock line="30">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="30" description="phpunk\compat\crypto"/>
      </docblock>
      <argument line="0" by_reference="false">
        <name>$password</name>
        <default></default>
        <type/>
      </argument>
      <argument line="0" by_reference="false">
        <name>$hash</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="" line="42" package="phpunk\compat\crypto">
      <name>_random_bytes</name>
      <full_name>\_random_bytes()</full_name>
      <docblock line="42">
        <description>Generates an arbitrary length string of cryptographic random bytes that are suitable for cryptographic use, such as when generating salts, keys or initialization vectors.</description>
        <long-description>Triggers error if no crytpographically secure random number generator can be found.</long-description>
        <tag name="package" line="42" description="phpunk\compat\crypto"/>
        <tag name="param" line="42" description="&lt;p&gt;The length of the random string that should be returned in bytes.&lt;/p&gt;" type="integer" variable="$length">
          <type>integer</type>
        </tag>
        <tag name="return" line="42" description="Returns a string containing the requested number of cryptographically secure random bytes." type="string">
          <type>string</type>
        </tag>
      </docblock>
      <argument line="0" by_reference="false">
        <name>$length</name>
        <default></default>
        <type>integer</type>
      </argument>
    </function>
    <function namespace="" line="60" package="phpunk\compat\crypto">
      <name>_hash_equals</name>
      <full_name>\_hash_equals()</full_name>
      <docblock line="60">
        <description>Compares two strings using the same time whether they're equal or not.</description>
        <long-description>This function should be used to mitigate timing attacks; for instance, when testing crypt() password hashes.</long-description>
        <tag name="package" line="60" description="phpunk\compat\crypto"/>
        <tag name="param" line="60" description="&lt;p&gt;The string of known length to compare against&lt;/p&gt;" type="string" variable="$hash1">
          <type>string</type>
        </tag>
        <tag name="param" line="60" description="&lt;p&gt;The user-supplied string&lt;/p&gt;" type="string" variable="$hash2">
          <type>string</type>
        </tag>
      </docblock>
      <argument line="0" by_reference="false">
        <name>$hash1</name>
        <default></default>
        <type>string</type>
      </argument>
      <argument line="0" by_reference="false">
        <name>$hash2</name>
        <default></default>
        <type>string</type>
      </argument>
    </function>
    <function namespace="" line="87" package="phpunk\compat\crypto">
      <name>_password_hash</name>
      <full_name>\_password_hash()</full_name>
      <docblock line="87">
        <description>Creates a new password hash using a strong one-way hashing algorithm.</description>
        <long-description>The following algorithms are supported:
* **PASSWORD_DEFAULT** - Use the bcrypt algorithm
* **PASSWORD_BCRYPT** - Use the CRYPT_BLOWFISH algorithm to create the hash. This will produce a standard crypt() compatible hash using the "$2y$" identifier. The result will always be a 60 character string, or FALSE on failure.

Supported options for **PASSWORD_BCRYPT**:
* **salt** - to manually provide a salt to use when hashing the password. If omitted, a random salt will be generated.
* **cost** - which denotes the algorithmic cost that should be used. If omitted, a default value of 10 will be used.</long-description>
        <tag name="package" line="87" description="phpunk\compat\crypto"/>
        <tag name="param" line="87" description="&lt;p&gt;The user's password&lt;/p&gt;" type="string" variable="$password">
          <type>string</type>
        </tag>
        <tag name="param" line="87" description="&lt;p&gt;A password algorithm constant denoting the algorithm to use when hashing the password&lt;/p&gt;" type="integer" variable="$algo">
          <type>integer</type>
        </tag>
        <tag name="param" line="87" description="" type="array" variable="$options">
          <type>array</type>
        </tag>
        <tag name="return" line="87" description="Returns the hashed password, or FALSE on failure." type="string">
          <type>string</type>
        </tag>
      </docblock>
      <argument line="0" by_reference="false">
        <name>$password</name>
        <default></default>
        <type>string</type>
      </argument>
      <argument line="0" by_reference="false">
        <name>$algo</name>
        <default></default>
        <type>integer</type>
      </argument>
      <argument line="0" by_reference="false">
        <name>$options</name>
        <default>array()</default>
        <type>array</type>
      </argument>
    </function>
    <function namespace="" line="106" package="phpunk\compat\crypto">
      <name>_password_verify</name>
      <full_name>\_password_verify()</full_name>
      <docblock line="106">
        <description>Verifies that the given hash matches the given password.</description>
        <long-description></long-description>
        <tag name="package" line="106" description="phpunk\compat\crypto"/>
        <tag name="param" line="106" description="&lt;p&gt;The user's password&lt;/p&gt;" type="string" variable="$password">
          <type>string</type>
        </tag>
        <tag name="param" line="106" description="&lt;p&gt;A hash created by password_hash()&lt;/p&gt;" type="string" variable="$hash">
          <type>string</type>
        </tag>
        <tag name="return" line="106" description="Returns TRUE if the password and hash match, or FALSE otherwise." type="boolean">
          <type>boolean</type>
        </tag>
      </docblock>
      <argument line="0" by_reference="false">
        <name>$password</name>
        <default></default>
        <type>string</type>
      </argument>
      <argument line="0" by_reference="false">
        <name>$hash</name>
        <default></default>
        <type>string</type>
      </argument>
    </function>
    <parse_markers>
      <error line="12" code="PPC:ERR-50015">Argument $length is missing from the Docblock of random_bytes</error>
      <error line="12" code="PPC:ERR-50011">No summary for function \random_bytes()</error>
      <error line="18" code="PPC:ERR-50015">Argument $hash1 is missing from the Docblock of hash_equals</error>
      <error line="18" code="PPC:ERR-50015">Argument $hash2 is missing from the Docblock of hash_equals</error>
      <error line="18" code="PPC:ERR-50011">No summary for function \hash_equals()</error>
      <error line="24" code="PPC:ERR-50015">Argument $password is missing from the Docblock of password_hash</error>
      <error line="24" code="PPC:ERR-50015">Argument $algo is missing from the Docblock of password_hash</error>
      <error line="24" code="PPC:ERR-50015">Argument $options is missing from the Docblock of password_hash</error>
      <error line="24" code="PPC:ERR-50011">No summary for function \password_hash()</error>
      <error line="30" code="PPC:ERR-50015">Argument $password is missing from the Docblock of password_verify</error>
      <error line="30" code="PPC:ERR-50015">Argument $hash is missing from the Docblock of password_verify</error>
      <error line="30" code="PPC:ERR-50011">No summary for function \password_verify()</error>
    </parse_markers>
    <source>eJylV21z00YQ/hz/ioVxkRxMSDIdPhA8ECBQpkAydgLtAPWcpbN1E1kn7k4xbst/7+6eTpYdJ6XTyUxsad93n33xk6dlVnYe7u52YBeei+RyIUxqHyR6XgqnJipXbgnTqkic0oUFUaSQ4BcnCmdRhKSelSgmZhJQU1VcfvaynxOzLJ1GhoedTiqnqpBpHJ0dj0YfT4cvx89fDH8/O496ANqAJ1+n9gEOekdbpF+evDq+eEvi26QDtQ8bClFXR00hvhMCGstvyjobRwYD0/PxZOmkjXo9+KuzE3igTYu7uSxmLmOOHSNdZQoYb+U46ux873y/yWAmbDaWXyuRX7PXIsVdejjoA38erlu9he9226WwdqFNyho2ra8R4254RNUin2n80KWHwgA+fVl36EdFf9S9K2nUdHmjg568ZocM3+DTTdzBl7oFXstCGoF1RKiDMBPljDBL8DUF64wqZqCn4NE9M6LMVFJDBBgA4DLhUFSCrZQTk1zCFFG6LlBZ2Ud6koGwsMhkATNvmNRbkTvbh0u5tIRvVSinRK7+FBz/lUycNnaPvD03ajaTxoI0hjinUGiy5MpgSeT5EqxMKvSn9rKo5hNpgkFyDUOdkJdVke6tmtqIOdp2Eg1ADWo4z2TIBSbBZY3SOjMcu810laek0ldBpqjHJ4e9flYXp5YZ8hMmPLzAAeMERs36SMnXSlqHWmrPN9O/JcbG2MNOA5ztbUpoIRxeg6EuZWFtHqRKK6tUNxNiBbFb+NqzQOZWbrUz51jGiZEIu7G6wqF27x40M+8dTy6caR/GF8Pj9y9P361Z35QOJvtwXZDG347zkBkzYuLovQZxJVTOOH0xOhu+f435r8vnEYFz9GR8MToZjk+Gw9Mha1lVEDsMvUSexnCSmXi/h2yrrnpBK8FQbyx0XWWLPRAqbMVcglP4D1sBXxh6u4ywnDzeqAkK7TziM2WbfdRCGjZUCk7DHHtlhqkgdaReOIfbyR5xDypeXAm2HrccVoj7jVMY95rJwhPYw6fVCjU4/aTlRlhNg8tCL4rQGOhF4uMFMRNk8wYth6wFPTcPbFWWucIQPH0DuP+yEQhWKIfma2oP7gwG0H51iEO0rtkUtUiqYXeCXTkIAf1Ra0SodpETCfvERGmLu4oe0SbxB7Uo3TsCJD3B9/Tl/n3CJQv/PcCapczzqau+tCHjlQ9YfQsgjF+aAYVcrBeixglPB03pLuSDhVgyjQm4W4xy2bzGB8E2z/VijWbrgVyW2uAkeUys+Le7eTPs7sIDuLCSYTlhYKyUXBPyV8WajG+6529PP756M/plJcuo4CCZjZzf82BeqDyH0ui0SiRHiXMEb7AGleEUy2U7HaTkbvdw2b0LKpWFU1MlzR6Hj31W5c7rFTmmylKDCHi0j62JIEwcNpjHWZ9a69Xx29EJphWRoXKcoQH3o5AtCCufwLAl/CabtLg4G9SIoqh4MGNoV+gihYZkIiHifQOGElIwoeZ78GYKGtsYDfdRKOwXEULCWOrVJXlbseVEW295gfsgw+mJ84JXsVyVANcusW3uKJocm0Zx+grK4ZXIK0kNfrDfGGf+7aOhwW3o68g2cW1bquQaHK/gvkJLuLF9JCFHa2i6NYsta8IY7JZwe92yfwMuseCrI+kGfLSn03+4GNmX2B908psjLMaBjFvmt/PhePTrmzOeF3wcKmslslD1vdROl2s4gJpCTz14CrbEWNw0jn7aP0xpG3nCY4gO9qMjkmMEDSCipolgz3PgZ8RPtMmMLHORyNh7Gd1HNdEg6vVReqd+R8swwlcwEVY++nksi0SnMl67LA4e9Xr+rGyGnu/ldmo4ovYE/ED3qQrnI9Vipq7q6mIzuSSr8exfN+3yv5DY3kYIRP7wUwpbY7nxW6DXxs5E61zi3RjAcz68OKH7sw1C/rW48r8NJlryC2VvxtJtx33twrWt2N+SZxbiRP8DCbn5aQ==</source>
  </file>
  <file path="component/renderer.php" generated-path="component.renderer.html" hash="827b0f5a8d848544e3baad7ddde02a55" package="phpunk\component">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="phpunk\component"/>
    </docblock>
    <namespace-alias name="object">\PHPunk\Util\object</namespace-alias>
    <namespace-alias name="result">\PHPunk\Database\result</namespace-alias>
    <namespace-alias name="record">\PHPunk\Database\record</namespace-alias>
    <class final="false" abstract="false" namespace="PHPunk\Component" line="15" package="phpunk\component">
      <extends/>
      <name>renderer</name>
      <full_name>\PHPunk\Component\renderer</full_name>
      <docblock line="15">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="15" description="phpunk\component"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Component" line="24" package="phpunk\component">
        <name>__construct</name>
        <full_name>\PHPunk\Component\renderer::__construct()</full_name>
        <docblock line="24">
          <description></description>
          <long-description></long-description>
          <tag name="property" line="24" description="Resource name for this component" type="string" variable="$resource">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$resource</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="PHPunk\Component" line="42" package="phpunk\component">
        <name>render</name>
        <full_name>\PHPunk\Component\renderer::render()</full_name>
        <docblock line="42">
          <description>Renders a database result for API response.</description>
          <long-description></long-description>
          <tag name="param" line="42" description="&lt;p&gt;Database result, record, or error object&lt;/p&gt;" type="object" variable="$result">
            <type>object</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$result</name>
          <default></default>
          <type>object</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="PHPunk\Component" line="73" package="phpunk\component">
        <name>create_response</name>
        <full_name>\PHPunk\Component\renderer::create_response()</full_name>
        <docblock line="73">
          <description>Builds an API data object from a database record. Returned object will
have transformed field names/values and contain API hyperlinks.</description>
          <long-description></long-description>
          <tag name="param" line="73" description="&lt;p&gt;Database record&lt;/p&gt;" type="object" variable="$record">
            <type>object</type>
          </tag>
          <tag name="return" line="73" description="API data object" type="object">
            <type>object</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$record</name>
          <default></default>
          <type>object</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="PHPunk\Component" line="100" package="phpunk\component">
        <name>get_links</name>
        <full_name>\PHPunk\Component\renderer::get_links()</full_name>
        <docblock line="100">
          <description>Adds relevant hyperlinks to a data object in API response</description>
          <long-description></long-description>
          <tag name="param" line="100" description="&lt;p&gt;The data object being rendered&lt;/p&gt;" type="object" variable="$record">
            <type>object</type>
          </tag>
          <tag name="return" line="100" description="Multidimensional array of keys and URL parameters" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$record</name>
          <default></default>
          <type>object</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="PHPunk\Component" line="117" package="phpunk\component">
        <name>map_field_name</name>
        <full_name>\PHPunk\Component\renderer::map_field_name()</full_name>
        <docblock line="117">
          <description>Maps database field name to API field name</description>
          <long-description></long-description>
          <tag name="param" line="117" description="&lt;p&gt;Database field name&lt;/p&gt;" type="string" variable="$field">
            <type>string</type>
          </tag>
          <tag name="return" line="117" description="API field name" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$field</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="PHPunk\Component" line="127" package="phpunk\component">
        <name>map_field_value</name>
        <full_name>\PHPunk\Component\renderer::map_field_value()</full_name>
        <docblock line="127">
          <description>Transforms database field value into API field value</description>
          <long-description></long-description>
          <tag name="param" line="127" description="&lt;p&gt;Database field value&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="param" line="127" description="&lt;p&gt;Database field name&lt;/p&gt;" type="string" variable="$field">
            <type>string</type>
          </tag>
          <tag name="return" line="127" description="Database field value, NULL if field is not mapped" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="true">
          <name>$field</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <property final="false" static="false" visibility="public" line="15">
        <name>$resource</name>
        <default/>
        <docblock>
          <description>Name of the resource for this component</description>
          <long-description/>
          <tag name="var" description="&lt;p&gt;Name of the resource for this component&lt;/p&gt;" type="string" line="15">
            <type by_reference="false">string</type>
          </tag>
          <tag name="magic" line="15"/>
          <tag name="property" line="15" description="Name of the resource for this component" type="string" variable="$resource">
            <type>string</type>
          </tag>
        </docblock>
      </property>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="15" code="PPC:ERR-50005">No summary for class \PHPunk\Component\renderer</error>
      <error line="24" code="PPC:ERR-50015">Argument $resource is missing from the Docblock of __construct</error>
      <error line="24" code="PPC:ERR-50008">No summary for method __construct()</error>
    </parse_markers>
    <source>eJyVVk1v2zgQPVu/Yg7GygmcuJe9xNt0u81hF0iLIGhOjmHQ0thiQ1ECSSUNiv73nSFFSf7qhw+GNRzOvHnzZuS/3tVFnczOzxM4h79rkT2JLQLZGv30mFVlXWnUjg5nSaJFiZZcEO7+vePzD/F8niSN7cwPTqrHav0FMzoY2G+EE2th8dGgbdTJs6wyOQXsMJmqRuNewToj9RbGdLtqDKH4RHig2oArEDrjpjJkkBZ2wWdKWEteOkeDBr4lI44/4gRyqyuDILVDo4WCZ2GkWCvk01kyqo18Fg5hvOpyvIWNUBYJZB/lNMz7+IP5O4avzdOslcxg0+jMyUrDapVVmoI1mZt0wc4Y+WjMAS6uh4A6j3ky+p4cVleKLQUv0RVVfjLhFinVE76GLPZFuqyAgWWUUYcgjanSK7aNDLrGaNgHRUAIyQ6Ye0+/BQF5224IUvCsvL/7jx+JFIuXLanCiBKClHyJ7Huze3cKQTJToBhoDH2HC13/KkdPmPeVBhlM2oChNrmBaCApWCd0hqStELstfxzhMeGh3MwgiWMVD7qYvnpAUsnJwH3uncCLJd8dESMoPP3tXWGZAY/G097dWSx/CMff+CkcUcuVJ69FxG7SWnTReZGSr2tsujxrXUaFc3WXitSa4xFnX8yo0cdD+VOWyB65cUNE1Ic0aXzpQU9S/in1s1Ay7yClU587/Rz2Q7j5Qjy2jpfp2dynPlLIn2/eBNLYoUDBekk/VLQjtLtwrzVegcOvbvbFVjr1npgVFfDjCnXHhY94tjeT/zRS5TQF2kueRyFKfGOqcnc6uHuXNDg8YiTh1u9FKuVDFeIZwRmhLemlZI1LVLnfNHZGRTbIeXJaNtoJGRIWhN4oqZ/siSnjnMMp4+fg2Y5667qH/vS8nVJlWGZ7TQ3BJqE1wynwsHgKaB/B22sY+/riBJWiXvkDfz7vbN6pHxA2eY7CwSQEmUK8HxTphyRaoJ+0aPMT10XvdDL2rLYzvIM+JKf9uvIuPQNhqpWvx/fBxoLC04KVnXI+ehNgKKswuCHDmmW0aoyaxJvh2GfwS4FfMYK4pI2t0imkfDHtZd3VdXEdgYfLHnxc69FpT8Tv85zfpwqfhXYDTYGrWgVHmbSyi3F+oDke1OHNNfKbtH1p70pQGCNe4SMtCZnLErUlndG7O5hpn1GTgvIf7m/BJ0N6vdvTGj3Sm289CwtmNrWoNim3ahEWS/ci9O0LPY62dvfIPIXwYZcQ+eJa5ny69D5pVimFHsSvxvaX6Wu515OPorb98uhXAfeEW9Bbhk2If1jC6c3h9R3iW+/DcMdp7eeN/SYhyQ61wbRXyee40g7qCfNMf9aGJXnjsKZSfiUUYbj3Szpw/j0CQuhjMafw6eH2Fmh5BCP9ydOVYwpqzH+Fot2V9MeQrBbckT025HW+Tyu8iyRcgW6U8jR/T/4Hnq3PPQ==</source>
  </file>
  <file path="cache.php" generated-path="cache.html" hash="9a138e5026de08d94e1da5938e54496d" package="phpunk">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="phpunk"/>
    </docblock>
    <class final="false" abstract="false" namespace="PHPunk" line="11" package="phpunk">
      <extends/>
      <name>cache</name>
      <full_name>\PHPunk\cache</full_name>
      <docblock line="11">
        <description>Basic reference implementation. Multi-type, in-memory cache.</description>
        <long-description></long-description>
        <tag name="package" line="11" description="phpunk"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk" line="26" package="phpunk">
        <name>__construct</name>
        <full_name>\PHPunk\cache::__construct()</full_name>
        <docblock line="26">
          <description>Memcache is required to preserve cache across multiple requests.</description>
          <long-description></long-description>
          <tag name="param" line="26" description="&lt;p&gt;OPTIONAL Memcache or Memcached instance&lt;/p&gt;" type="object" variable="$memcache">
            <type>object</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$memcache</name>
          <default>false</default>
          <type>object</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk" line="37" package="phpunk">
        <name>has</name>
        <full_name>\PHPunk\cache::has()</full_name>
        <docblock line="37">
          <description>Returns whether or not a cached object exists for the given type and Id.</description>
          <long-description>If the Id is omitted, returns whether type exists.</long-description>
          <tag name="param" line="37" description="&lt;p&gt;Name of object type&lt;/p&gt;" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="param" line="37" description="&lt;p&gt;OPTIONAL Unique object Id&lt;/p&gt;" type="mixed" variable="$id">
            <type>mixed</type>
          </tag>
          <tag name="return" line="37" description="TRUE if object or type exists in cache, FALSE otherwise" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default>false</default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk" line="50" package="phpunk">
        <name>get</name>
        <full_name>\PHPunk\cache::get()</full_name>
        <docblock line="50">
          <description>Returns a cached object for the given type and Id.</description>
          <long-description></long-description>
          <tag name="param" line="50" description="&lt;p&gt;Name of object type&lt;/p&gt;" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="param" line="50" description="&lt;p&gt;OPTIONAL Unique object Id&lt;/p&gt;" type="mixed" variable="$id">
            <type>mixed</type>
          </tag>
          <tag name="return" line="50" description="The cached object, NULL if not exists" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default>false</default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk" line="64" package="phpunk">
        <name>put</name>
        <full_name>\PHPunk\cache::put()</full_name>
        <docblock line="64">
          <description>Caches an object with the given type and Id.</description>
          <long-description></long-description>
          <tag name="param" line="64" description="&lt;p&gt;Name of object type&lt;/p&gt;" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="param" line="64" description="&lt;p&gt;Unique object Id&lt;/p&gt;" type="mixed" variable="$id">
            <type>mixed</type>
          </tag>
          <tag name="param" line="64" description="&lt;p&gt;The object to cache&lt;/p&gt;" type="mixed" variable="$object">
            <type>mixed</type>
          </tag>
          <tag name="return" line="64" description="The cached object" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$object</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk" line="79" package="phpunk">
        <name>remove</name>
        <full_name>\PHPunk\cache::remove()</full_name>
        <docblock line="79">
          <description>Removes an object with the given type and Id from the cache. If the Id is
omitted, removes all objects of the given type.</description>
          <long-description></long-description>
          <tag name="param" line="79" description="&lt;p&gt;Name of object type&lt;/p&gt;" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="param" line="79" description="&lt;p&gt;OPTIONAL Unique object Id&lt;/p&gt;" type="mixed" variable="$id">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default>false</default>
          <type>mixed</type>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="66">timeout?</todo>
    </markers>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJy9ld9P2zAQx5+bv+KG+tCilr6P8Wsb0yoVilh5Qqhyk0vjkdiZ7RQQ4n/f2U7apBDGJrG3ynf3vbvvx04/HeVJHox2dwPYheOchbdsiUBnhbilo1EQCJahpgDCxfcLOt0PqvTPTPMQFMaoUFCcZ3mKGQrDDJdiD86K1PChechxAFwMM8ykeoCQhQnuOe0wZVr7A3gMOla2Y8fgSyEV6QmDSrAUVkxxtkjRRkdBJ1fSYGgwgu6cRF09TfVP9REzDA6AKcUeev26ylmpDFzTjr8KrqjASMgValQrLOdmoZK0RGZ3pfVdKmqj9/woOVMsA7n4SQ2hW00L04vZeHp+Mtl0kWr9O6LJtWFkaTVwsUjJ6bgQoXUW5vNQUoYqQtPbaB5AzFKNfWtlp2sSroeH81q0u/Gq81Rb9BJNoYSGuwRNgspOIqQBBuUw5fB4z2ktiClMabDkKxRg4QITEYwjv/A4dtFxZG2TGTdk84BMabZwZV6w4RPtxMUSui5+ThcPZFz1t2f13IzfW4I82ph5JTiZXxWMI5/um8NCyhSZgNnl1SnwtaxsTEPO+7UH8O1k8uMUpJ33jus2FAnTva6/4naUBgNq0vvAtUaiVOKw1+3a5d/0+5TSKYdzVfb2VQdW7Ahai68pftOHj0CXoI3nNsA/kPsPCHz+LMHmZAM4v5pMLBN77zyIFruXzo52u7evfd3j7djw0KrtOLkRqe30nwM4bvOerH8ptoXii+1DJERlyB03ybtBeNn7RlYZswgqOelhvAVUC5S8qEMZVF1eoeIiz75Rw0PdBLKR2ofRCGbTr1MwPENZmKM6WJ9E3jvzq+N2dge1kubLyeTqjbwgVjJzIf+H1vjyObXa16+UTdNSV1ueTdn3foQvcPNz/d17aiMXYYoGt17TGtEajdPkkXuWhXj142ZrMLUf3ldS+47gU/Ab0pTEMg==</source>
  </file>
  <file path="url.php" generated-path="url.html" hash="96a59dc94a93c3fb18b969a356b908a4" package="phpunk">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="phpunk"/>
    </docblock>
    <class final="false" abstract="false" namespace="PHPunk" line="13" package="phpunk">
      <extends/>
      <name>url_schema</name>
      <full_name>\PHPunk\url_schema</full_name>
      <docblock line="13">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="13" description="phpunk"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk" line="48" package="phpunk">
        <name>__construct</name>
        <full_name>\PHPunk\url_schema::__construct()</full_name>
        <docblock line="48">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="48" description="&lt;p&gt;A fully-qualified domain name&lt;/p&gt;" type="string" variable="$host">
            <type>string</type>
          </tag>
          <tag name="param" line="48" description="&lt;p&gt;OPTIONAL base path for URL's&lt;/p&gt;" type="string" variable="$path">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$host</name>
          <default>false</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default>'/'</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk" line="70" package="phpunk">
        <name>add_resource</name>
        <full_name>\PHPunk\url_schema::add_resource()</full_name>
        <docblock line="70">
          <description>Registers a resource name. Registers alias for resource, if included.</description>
          <long-description></long-description>
          <tag name="param" line="70" description="&lt;p&gt;Resource name&lt;/p&gt;" type="string" variable="$resource">
            <type>string</type>
          </tag>
          <tag name="param" line="70" description="&lt;p&gt;Alias for resource name&lt;/p&gt;" type="string" variable="$alias">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$resource</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$alias</name>
          <default>false</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk" line="87" package="phpunk">
        <name>is_resource</name>
        <full_name>\PHPunk\url_schema::is_resource()</full_name>
        <docblock line="87">
          <description>Returns canonical resource name, if it exists.</description>
          <long-description></long-description>
          <tag name="param" line="87" description="&lt;p&gt;Resource name or alias&lt;/p&gt;" type="string" variable="$resource">
            <type>string</type>
          </tag>
          <tag name="return" line="87" description="Canonical resource name, FALSE if no such resource or alias exists" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$resource</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk" line="96" package="phpunk">
        <name>add_alias</name>
        <full_name>\PHPunk\url_schema::add_alias()</full_name>
        <docblock line="96">
          <description>Registers an alias for the given resource name.</description>
          <long-description></long-description>
          <tag name="param" line="96" description="&lt;p&gt;Alias for the resource name&lt;/p&gt;" type="string" variable="$alias">
            <type>string</type>
          </tag>
          <tag name="param" line="96" description="&lt;p&gt;Original resource name&lt;/p&gt;" type="string" variable="$resource">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$alias</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$resource</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk" line="108" package="phpunk">
        <name>is_alias</name>
        <full_name>\PHPunk\url_schema::is_alias()</full_name>
        <docblock line="108">
          <description>Returns canonical resource name for the alias, if it exists.</description>
          <long-description></long-description>
          <tag name="param" line="108" description="&lt;p&gt;Alias for the resource name&lt;/p&gt;" type="string" variable="$alias">
            <type>string</type>
          </tag>
          <tag name="return" line="108" description="Canonical resource name, FALSE if no such alias exists" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$alias</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk" line="118" package="phpunk">
        <name>add_action</name>
        <full_name>\PHPunk\url_schema::add_action()</full_name>
        <docblock line="118">
          <description>Registers an action name. If resource is omitted, the action is registered
as a global action.</description>
          <long-description></long-description>
          <tag name="param" line="118" description="&lt;p&gt;Action name&lt;/p&gt;" type="string" variable="$action">
            <type>string</type>
          </tag>
          <tag name="param" line="118" description="&lt;p&gt;OPTIONAL Resource name&lt;/p&gt;" type="string" variable="$resource">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$action</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$resource</name>
          <default>false</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk" line="133" package="phpunk">
        <name>is_action</name>
        <full_name>\PHPunk\url_schema::is_action()</full_name>
        <docblock line="133">
          <description>Returns canonical action name, if it exists.</description>
          <long-description></long-description>
          <tag name="param" line="133" description="&lt;p&gt;Action name&lt;/p&gt;" type="string" variable="$action">
            <type>string</type>
          </tag>
          <tag name="param" line="133" description="&lt;p&gt;OPTIONAL Resource name&lt;/p&gt;" type="string" variable="$resource">
            <type>string</type>
          </tag>
          <tag name="return" line="133" description="Canonical action name, FALSE if no such action exists" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$action</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$resource</name>
          <default>false</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk" line="147" package="phpunk">
        <name>add_view</name>
        <full_name>\PHPunk\url_schema::add_view()</full_name>
        <docblock line="147">
          <description>Registers a view name. If resource is omitted, the view is registered as
a global view.</description>
          <long-description></long-description>
          <tag name="param" line="147" description="&lt;p&gt;View name&lt;/p&gt;" type="string" variable="$action">
            <type>string</type>
          </tag>
          <tag name="param" line="147" description="&lt;p&gt;OPTIONAL Resource name&lt;/p&gt;" type="string" variable="$resource">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$view</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$resource</name>
          <default>false</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk" line="162" package="phpunk">
        <name>is_view</name>
        <full_name>\PHPunk\url_schema::is_view()</full_name>
        <docblock line="162">
          <description>Returns canonical view name, if it exists.</description>
          <long-description></long-description>
          <tag name="param" line="162" description="&lt;p&gt;View name&lt;/p&gt;" type="string" variable="$action">
            <type>string</type>
          </tag>
          <tag name="param" line="162" description="&lt;p&gt;OPTIONAL Resource name&lt;/p&gt;" type="string" variable="$resource">
            <type>string</type>
          </tag>
          <tag name="return" line="162" description="Canonical view name, FALSE if no such view exists" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$view</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$resource</name>
          <default>false</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk" line="175" package="phpunk">
        <name>parse_path</name>
        <full_name>\PHPunk\url_schema::parse_path()</full_name>
        <docblock line="175">
          <description>Parses a URL path into key-value parameters.</description>
          <long-description></long-description>
          <tag name="param" line="175" description="&lt;p&gt;OPTIONAL Path to parse&lt;/p&gt;" type="string" variable="$path">
            <type>string</type>
          </tag>
          <tag name="return" line="175" description="Key-value parameters" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default>''</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk" line="242" package="phpunk">
        <name>build_path</name>
        <full_name>\PHPunk\url_schema::build_path()</full_name>
        <docblock line="242">
          <description>Builds a URL path, based on given parameters.</description>
          <long-description></long-description>
          <tag name="param" line="242" description="&lt;p&gt;OPTIONAL Key-value parameters for URL&lt;/p&gt;" type="array" variable="$params">
            <type>array</type>
          </tag>
          <tag name="return" line="242" description="The URL path" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$params</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk" line="299" package="phpunk">
        <name>build</name>
        <full_name>\PHPunk\url_schema::build()</full_name>
        <docblock line="299">
          <description>Builds a complete URL, based on given parameters. Includes any base path.</description>
          <long-description></long-description>
          <tag name="param" line="299" description="&lt;p&gt;Key-value parameters for URL&lt;/p&gt;" type="array" variable="$params">
            <type>array</type>
          </tag>
          <tag name="param" line="299" description="&lt;p&gt;Whether the URL should use HTTPS&lt;/p&gt;" type="boolean" variable="$secure">
            <type>boolean</type>
          </tag>
          <tag name="return" line="299" description="The complete URL" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$secure</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="PHPunk" line="319" package="phpunk">
        <name>split_slug</name>
        <full_name>\PHPunk\url_schema::split_slug()</full_name>
        <docblock line="319">
          <description>Splits a URL slug at the first tilde (~). If slug does not contain a
tilde, the first half will be the full slug and the second half will be
an empty string.</description>
          <long-description></long-description>
          <tag name="param" line="319" description="&lt;p&gt;URL slug to be split&lt;/p&gt;" type="string" variable="$slug">
            <type>string</type>
          </tag>
          <tag name="param" line="319" description="&lt;p&gt;Array of two strings&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$slug</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="PHPunk" line="334" package="phpunk">
        <name>join_slug</name>
        <full_name>\PHPunk\url_schema::join_slug()</full_name>
        <docblock line="334">
          <description>Joins two strings with a tilde (~) into a single URL slug. If second
argument is empty, result will contain the base string with no tilde.</description>
          <long-description></long-description>
          <tag name="param" line="334" description="&lt;p&gt;A base string&lt;/p&gt;" type="string" variable="$slug">
            <type>string</type>
          </tag>
          <tag name="param" line="334" description="&lt;p&gt;A suffix to append&lt;/p&gt;" type="string" variable="$suffix">
            <type>string</type>
          </tag>
          <tag name="return" line="334" description="The completed URL slug" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$slug</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$suffix</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="PHPunk" line="347" package="phpunk">
        <name>explode_slug</name>
        <full_name>\PHPunk\url_schema::explode_slug()</full_name>
        <docblock line="347">
          <description>Splits a URL slug at each dot (.). If slug does not contain a dot, the
original URL slug will be returned.</description>
          <long-description></long-description>
          <tag name="param" line="347" description="&lt;p&gt;URL slug to be split&lt;/p&gt;" type="string" variable="$slug">
            <type>string</type>
          </tag>
          <tag name="return" line="347" description="Array of strings, or original slug" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$slug</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="PHPunk" line="359" package="phpunk">
        <name>implode_slug</name>
        <full_name>\PHPunk\url_schema::implode_slug()</full_name>
        <docblock line="359">
          <description>Joins an array of strings with dots (.) into a single URL slug.</description>
          <long-description></long-description>
          <tag name="param" line="359" description="&lt;p&gt;Array of strings to be joined&lt;/p&gt;" type="array" variable="$slug">
            <type>array</type>
          </tag>
          <tag name="return" line="359" description="The completed URL slug" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$slug</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <property final="false" static="false" visibility="public" line="13">
        <name>$resources</name>
        <default/>
        <docblock>
          <description>Array of registered resources</description>
          <long-description/>
          <tag name="var" description="&lt;p&gt;Array of registered resources&lt;/p&gt;" type="array" line="13">
            <type by_reference="false">array</type>
          </tag>
          <tag name="magic" line="13"/>
          <tag name="property" line="13" description="Array of registered resources" type="array" variable="$resources">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="13">
        <name>$actions</name>
        <default/>
        <docblock>
          <description>Array of registered global actions</description>
          <long-description/>
          <tag name="var" description="&lt;p&gt;Array of registered global actions&lt;/p&gt;" type="array" line="13">
            <type by_reference="false">array</type>
          </tag>
          <tag name="magic" line="13"/>
          <tag name="property" line="13" description="Array of registered global actions" type="array" variable="$actions">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="13">
        <name>$views</name>
        <default/>
        <docblock>
          <description>Array of registered global views</description>
          <long-description/>
          <tag name="var" description="&lt;p&gt;Array of registered global views&lt;/p&gt;" type="array" line="13">
            <type by_reference="false">array</type>
          </tag>
          <tag name="magic" line="13"/>
          <tag name="property" line="13" description="Array of registered global views" type="array" variable="$views">
            <type>array</type>
          </tag>
        </docblock>
      </property>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="13" code="PPC:ERR-50005">No summary for class \PHPunk\url_schema</error>
      <error line="48" code="PPC:ERR-50008">No summary for method __construct()</error>
      <error line="147" code="PPC:ERR-50014">Name of argument $view does not match with the DocBlock's name $action in add_view()</error>
      <notice line="147" code="PPC:ERR-50013">Parameter $action could not be found in add_view()</notice>
      <error line="162" code="PPC:ERR-50014">Name of argument $view does not match with the DocBlock's name $action in is_view()</error>
      <notice line="162" code="PPC:ERR-50013">Parameter $action could not be found in is_view()</notice>
    </parse_markers>
    <source>eJy9Wm1z2zYS/iz/CsSjKaWcbPf67ew6te8mneQu03hsXztTjauBSUjChSJ1BGjHk3F+exe7AAhSJCU7vvtkCsC+77OLF//403q53jt6/XqPvWZnax5/4gvBYKzMPsHQ0d5exldCwYRgF+8uYPRkr1pe5GtR6AfGi4I/sGEhVF4WsVDsHAfyOSvEQiotCpEwP9tKy2Mt86ydcpHmtzxldkkr+Z0U973EuAAtilOuFCuLdKbipVhx9mVvYCwaGL5ykeWFYDID4syQ8ULy21SY2aO9wbqQd1wLNpwttV7PlrnS4I9nkN9yJWZrrpfPI688fUoeGI2fx4inEjT5djY2et/IhqLYzmTNC75iShcyW7Ch8Tw7Z/MyTR8O/luCGXMJwU7yFZcZMznbRmUczj5eXL//+Mv5B2ZiwHBonhfs35cfIuU0Km9TGQP3DO1is1kM1umijPWIRJ+yOU+VmFiepyw6isYmkwZDvZTq4E2VIDD5SqzW+oFIx+wnq/4xWHz19vLXt5fT6N319cXs3cer6+jmJGDi0wSYDCldBo8trl3xBei7EnqZJ502LARo/0k8kJ7qXup4yYKRQWwcEvncio6rQRvgcAiDRQODQuiyyJhV+8v+zHDdfzSmPNY1vrTIVIz7ioDxOgynTFZiVNySCZNzSKA4LRORHLbF1jO7DLm2rSTu5xsyPEGL93iSeNCNhpVWlplNB/IjaDp6ZV0hVQvZ2PrbRdl7fOqX3HgUoH+9/9npGzseKX4nogmLEpEKLaLxhFZSWBgLVqbgVrNyUcjE/JVarMxfMH4VjQ3ZmCJllSejxoGKxnwctHOTyt/jk2aATSooFvMsz2QMcK/5lwKpmfgMSqknRJJBpFA2kdiMszT/6BL28/mHq7dGZJYzVUK++3nHzmrSEff2+GH4rAZSKYOrnlAi4r3cY1alhnVptys9ILIAE3op2ELeiawBoF1y3dBu5HtnAD4WciGzpld7INKVI1QZPZdT1guPE5+InuK779irDb9RmoZ56vrZlOYMijyPp+Wp95a1ZWvW7ujp5+btbrlac0x3lja8hAna4cBjqmy9mUniqYi/n1emSMXyldRaJBNypdMz2J8hO266QW2X1+5ioj+v5PVnr2v0Gx2hK3vxc2TlBPlbr+8vmMddAutJ3VZUpr4l3EwxzemnqeMCNK1LPT21BvTKbyCJ2DeY9yMoyIRdEPNS4exGVU2hTUzR7FZQ/S/SYlhtmSvCCoZbQl51ERcnZOrAns2o81cq21WIdGv2VmTjmWkHWOOyGqiZ7dI8PH315cCvTtLLAtqIHeHZ8P8A5lZhuwCZdmwWxubH00Bcya0LQ7Y1pv3g9dHeHbrfGrZu4AbKbMAW57aB9sVDP3SH093hagMbgBVH2qFqVcUVCFM0sx2kF7wwh3ZuDq10goWzdc7gzHVwx9PSnGohEsLAuDV89XPwhfkF5GvDtRYWulz5VwvbDscjCzywjvzBOKpOReBeUoFmbb7aheLzOs0TMYKTNNSVQq5o0QSP1jYGqEDjhoBASTNQItcyMjk/wi8ADVk7/f6GpCHhTC3lXFslPA+7R/LL6ZDWAGFrpjRIBl4btyRq7kS7NWnVxUAeJGblShQyHtVNCuTB+c5IgmyAgI02JeA5b/DITHWxuqJ9GzuCLgE0H/njaUN/s9ZXrkaF6mJpZvsYPoZH07pf8Pql6ela4LoM66V8irnkyx57d5S01QtejndBFXLMj2cn6VymAOlK+Kg1fd+wusiT3TIdV5XZpspPB4FT/FmRJconJfK2TN5R0rbIYoJXWX6/lKlgozgvM7eMvTllP1jrzV0O3tmBdFXO5/LzuIq3WqdSz1RaLjqxP6RK7kls1e0h8lgCoaaeRiovNF0beSPN3M2UeBtTocrrPM3vRTGqtDw1d1UqjqC52Y9jFnH4i4r59PYdEY20V1hrvsDLrrUoZvg9HrdoUJU+UmVc4+xuYa1CRH+2AQNnDC0zPMsiTURselOTbS+LLsrHoP9b0kZ//3sp0yTs7xO8rE4YtFi6+elo8PY1xLZJ3+HbOri79G7bh13Drt6J7uj0t0ZF3+nrXdlur2xfb7bqyl3Yq6s9AO5VcbBq65t17KwVdPZC1bNpWVRlctBJz+pFyedUk42ZDaDQLD5nG3Wlrzi08HdktYRt1J2zRkl5oggiwgRs6VmdhvT4NlS6sw82te7hF2hoXA0JKrh5ouisAebiaEigC5p+vUHa+bY9VH0+6ItOMZo6aQy7EtNk0LNbIfuwcHpFGr3WTlotvO2NebQYCzH047xIvOED+tWovbTipOqovrjijC+vpgpPbFUeV402cAUF9T85cMBWQfpMWE1ESABKtrW3Fre4qtnhGD/d6Rq/gQmdQ/U22OSawwccLXnhanGLmVCvRUb12jyLbVgVzAedoGGiO9qtgvOM7/etZT7OYS1UZVN0+0o9e08vYOba9aF6v+xpAdsrP1Hd5nkqOPQjJeKyEOy3pdBLQbfYphOoZV6mCStBonmqvOrqGqElfZ3DBW/iJdaP5vg0j9sUOw17BvOiqnDTYL6oSbjXWDovNp9e6eyID6rorMY6/7oarHOPrbRks8tVfcxtJwyX+kl2H8eO8Od+eNrft3YdHx2h4n5JLS2uzC7OdX8DNsY1BmIuCzBWg0qwQfw6xls5nE9ySIks1+D+TJsHcI6McOUkIF3ydM7uZZqyW0HDJXyTiCzBEXB3Dp/hSrrKyxjaa4Pdeq2AjLzSOjdScEu6mZ/+PzX0fW7p/Z1CkWsRa4CAT5lgX4tCqhuFdSEWsxXX8RJw9sdoen7w+/cHfzuY3fxl/LX2a3ikpMGhIYc/SCLs41F42zFyU9O/3lTrpj/cUOCV5hqSeUi+MLcbJ3tNBlYELmlC/p9QQFVoNDgZcoZXUaWrHM4UzKbCu5OCjcGheBQLaGSZNhevKGliLmjLVFPUXCKYkGLq2xihtCwncd1BPA+JWlfh5hjW2Q+j8notrHI9hSHxFnWHu+oyzpfuDPGlgb1wK19hDGi+2qka/HBmF7Bhf0kAT6PDXpSZNYgvZJW711LPykGN5Hf848IW1FjdV/IzuMjDxmbPxDxje7n9Xq2d9BowAnbrXDl3R4ewtXrlrptD5/o7ukOHpfE2B1PGc3eZWOlOuQgeVMbNXWnf0tooQ5vcyHEmdcSLJKFt3xvuanb30BNg+OPenwtfVBw=</source>
  </file>
  <file path="util/mutable.php" generated-path="util.mutable.html" hash="0a975f5156b5c6747de5fc98dd12fe07" package="phpunk\util">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="phpunk\util"/>
    </docblock>
    <function namespace="PHPunk\Util" line="101" package="phpunk\util">
      <name>is_mutable</name>
      <full_name>\PHPunk\Util\is_mutable()</full_name>
      <docblock line="101">
        <description>Returns whether or not the object is an instance of mutable.</description>
        <long-description></long-description>
        <tag name="package" line="101" description="phpunk\util"/>
        <tag name="param" line="101" description="&lt;p&gt;Any object&lt;/p&gt;" type="object" variable="$obj">
          <type>object</type>
        </tag>
        <tag name="return" line="101" description="Returns **TRUE** if **obj** mutable, **FALSE** otherwise." type="boolean">
          <type>boolean</type>
        </tag>
      </docblock>
      <argument line="0" by_reference="false">
        <name>$obj</name>
        <default></default>
        <type>object</type>
      </argument>
    </function>
    <trait namespace="PHPunk\Util" line="13" package="phpunk\util">
      <name>mutable</name>
      <full_name>\PHPunk\Util\mutable</full_name>
      <docblock line="13">
        <description>Object-oriented style syntax support</description>
        <long-description></long-description>
        <tag name="see" line="13" description="PHPunk Wiki" link="http://github.com/oneeyedjames/phpunk/wiki/Mutable-Objects"/>
        <tag name="package" line="13" description="phpunk\util"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Util" line="61" package="phpunk\util">
        <name>has</name>
        <full_name>\PHPunk\Util\mutable::has()</full_name>
        <docblock line="61">
          <description>Determine whether or not a given key exists.</description>
          <long-description></long-description>
          <tag name="param" line="61" description="&lt;p&gt;The key&lt;/p&gt;" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="return" line="61" description="TRUE if the key exists, FALSE otherwise" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Util" line="71" package="phpunk\util">
        <name>get</name>
        <full_name>\PHPunk\Util\mutable::get()</full_name>
        <docblock line="71">
          <description>Get the stored value for a given key.</description>
          <long-description></long-description>
          <tag name="param" line="71" description="&lt;p&gt;The key&lt;/p&gt;" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="param" line="71" description="&lt;p&gt;OPTIONAL The value to return if the given key does not exist&lt;/p&gt;" type="mixed" variable="$default">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$default</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Util" line="81" package="phpunk\util">
        <name>put</name>
        <full_name>\PHPunk\Util\mutable::put()</full_name>
        <docblock line="81">
          <description>Store a value for a given key.</description>
          <long-description></long-description>
          <tag name="param" line="81" description="&lt;p&gt;The key&lt;/p&gt;" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="param" line="81" description="&lt;p&gt;The value to be stored&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PHPunk\Util" line="90" package="phpunk\util">
        <name>remove</name>
        <full_name>\PHPunk\Util\mutable::remove()</full_name>
        <docblock line="90">
          <description>Remove a key-value pair from the store.</description>
          <long-description></long-description>
          <tag name="param" line="90" description="&lt;p&gt;The key&lt;/p&gt;" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
    </trait>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJytVV9v2jAQf04+xaniASIg2ysd69DGukpdW0FRH7YJmXBJXBI7sp22aOp339lJoFA6VeueCHfn35/znfzhpEgLPwwCHwL4VLBoxRIEipVi9bM0PKN46PuC5agpi3D17cqmZpQ69puDl4tbjExPKo7C4BK0WWcIei0MewBdFoVUhuoch0aE1JhiEIYJN2m56EcyD6VAXOPy1vKEFX14z1c8/F4atsiwV1Homh9uKOekGcW4gbyqgt++V2qESGYZVXMKkUjPqvQsN0+EVAg5S3gEOZpULm0i9L2iXGQUi0tBx6SA+TxiWdZu2UAXWkwlumPRPR5DO5KlMO06OBzC+w4lPIWmVAJaJuW69zFBs3P6x7tfHavFa0UZ0xqGQBVz9912RyjreUbxJEE1R6Wkah99Jg1gJJRiiTEX1NlKNFQgg4FjaHeOujCez6bjyfxmNLk4uzi1YI//6txJX+G6MnzAls29hUDXINSaO5aVWBHVDEW5l3wLE9f6L2ZSpt9uphS7FDW2wlze4UH4L2hQ5XSdcJ8SNiqQCoQ0wCDhdyiAzgA+cG103x6oNBVMsRxy/kBTYFHhOkVbWWVrYwspM2QCriezMdComqqmRuvC19H5dAzSkt5zjS+Y2vTlQM9kHJPfscM76O4UjaPVhlq4BHeHEJPDJ+5ebWsnSzvAyszA5dX12eXF6NyVVvi0I7XM2vS2kUuJ2nXX9eAFx8l2IhuWIYgyy17XAjjZzZ1uJmKwAdxr09S2h3ryH/tTQe00ZdHcwwu+ny3b0xGuvEz3l3XPyMQNOqmnml5FXDCuIFYy3w7CKx0dkPh0kZ6rm223z+l63LxJE3dnen/HrCLp3hLgGmhVuNCGCXrZZNw8I/3mraqk1uUt+oWRWNf//QNr13AGgV3AILDTGARUT581dpcCbgsptNnDvnvKNpa5ntfVbUvqbDcjaEU0kreKj8n4H711bJc=</source>
  </file>
  <package name="Default" full_name="Default"/>
  <package name="global" full_name="global"/>
  <package name="phpunk" full_name="phpunk">
    <package name="compat" full_name="phpunk\compat">
      <package name="crypto" full_name="phpunk\compat\crypto"/>
      <package name="http" full_name="phpunk\compat\http"/>
    </package>
    <package name="component" full_name="phpunk\component"/>
    <package name="database" full_name="phpunk\database"/>
    <package name="util" full_name="phpunk\util"/>
  </package>
  <namespace name="global" full_name="global"/>
  <namespace name="PHPunk" full_name="PHPunk">
    <namespace name="Component" full_name="PHPunk\Component"/>
    <namespace name="Database" full_name="PHPunk\Database"/>
    <namespace name="Util" full_name="PHPunk\Util"/>
  </namespace>
  <deprecated count="0"/>
</project>
